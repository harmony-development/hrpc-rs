initSidebarItems({"constant":[["HRPC_HEADER","The hRPC protobuf mimetype."]],"enum":[["DecodeBodyError","Errors that can occur while decoding the body of a [`Request`]."]],"fn":[["encode_protobuf_message","Encodes a protobuf message into a new `BytesMut` buffer."],["encode_protobuf_message_to","Encodes a protobuf message into the given `BytesMut` buffer."]],"macro":[["bail","Bails with an error."],["bail_result","Takes a `Result`, returns the error if it’s `Err`, otherwise returns the `Ok` value."],["bail_result_as_response","Takes a `Result`, returns the error as a HTTP response if it’s `Err`, otherwise returns the `Ok` value."],["combine_services","Combines a list of services that implement `Server`."],["include_proto","Include generated proto server and client items."]],"mod":[["body","Body utitilies and types."],["client","Common client types and functions."],["exports","Some re-exported crates that might be useful while writing software with `hrpc`."],["proto","The hRPC generated protocol."],["server","Common server types and functions."]],"struct":[["Request","A hRPC request."],["Response","hRPC response type."]],"trait":[["IntoRequest","Trait used for blanket impls on generated protobuf types."],["IntoResponse","Trait used for converting any type to a Response type."]],"type":[["BoxError","Alias for a type-erased error type."],["HttpRequest","HTTP request used by hRPC."],["HttpResponse","HTTP response used by hRPC."]]});