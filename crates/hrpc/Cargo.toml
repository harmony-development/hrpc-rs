[package]
name = "hrpc"
version = "0.22.0"
authors = ["Yusuf Bera Ertan <y.bera003.06@protonmail.com>"]
edition = "2018"
license = "MIT"
repository = "https://github.com/harmony-development/hrpc-rs"
homepage = "https://github.com/harmony-development/hrpc-rs"
description = "Common code for hRPC."
keywords = ["hrpc", "harmony", "rpc", "protobuf"]
categories = ["network-programming"]

[package.metadata.docs.rs]
all-features = true

[package.metadata.nix]
build = true
library = true

[features]
default = ["server", "client"]
server = [
    "ahash",
    "dashmap",
    "tokio/macros",
    "hyper/server",
    "sha-1",
    "base64",
    "matchit",
    "tower-http/map-response-body",
]
client = [
    "rustls-native-certs",
    "tokio-rustls",
    "hyper/client",
    "tower-http/decompression-gzip",
]

[build-dependencies]
# Needed to compile the hRPC proto
hrpc-build = { version = "0.22.0", path = "../hrpc-build" }
prost-build = "0.9"

[dependencies]
# Core types, traits and utilities
async-trait = "0.1"
prost = "0.9"
bytes = "1.0"
http = "0.2"
http-body = "0.4"
futures-util = { version = "0.3", default-features = false, features = ["std"] }

# Logging
tracing = { version = "0.1", default-features = false, features = ["std"] }

# Our async runtime
tokio = { version = "1.8", default-features = false, features = [
    "parking_lot",
] }

# Networking!
hyper = { version = "0.14", default-features = false, features = [
    "http1",
    "http2",
    "runtime",
] }
hyper-rustls = { version = "0.22", default-features = false, features = [
    "native-tokio",
] }
tower-http = { version = "0.1", default-features = false, features = ["trace"] }
tower = { version = "0.4", default-features = false, features = ["util"] }
tokio-tungstenite = { version = "0.15", default-features = false, features = [
    "rustls-tls",
] }

# Only used by client to discover certs for WS
rustls-native-certs = { version = "0.5", default-features = false, optional = true }
# Used by client to connect with TLS
tokio-rustls = { version = "0.22", default-features = false, optional = true }

dashmap = { version = "4.0", default-features = false, optional = true }
ahash = { version = "0.7", default-features = false, optional = true }

# Used by server for routing
matchit = { version = "0.4", default-features = false, optional = true }

# Used by server to implement WS request handling
sha-1 = { version = "0.9", default-features = false, optional = true }
base64 = { version = "0.13", default-features = false, optional = true }

# Overall better locks
parking_lot = { version = "0.11", default-features = false }
# Used in socket impls
flume = { version = "0.10", default-features = false, features = [
    "async",
    # TODO(yusdacra): Do we need eventual fairness?
    "eventual-fairness",
] }
