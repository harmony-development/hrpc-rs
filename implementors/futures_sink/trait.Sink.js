(function() {var implementors = {};
implementors["hrpc"] = [{"text":"impl&lt;S&gt; Sink&lt;<a class=\"enum\" href=\"hrpc/common/socket/enum.SocketMessage.html\" title=\"enum hrpc::common::socket::SocketMessage\">SocketMessage</a>&gt; for <a class=\"struct\" href=\"hrpc/common/transport/tokio_tungstenite/struct.WebSocket.html\" title=\"struct hrpc::common::transport::tokio_tungstenite::WebSocket\">WebSocket</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: AsyncRead + AsyncWrite + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":false,"types":["hrpc::common::transport::tokio_tungstenite::WebSocket"]},{"text":"impl Sink&lt;<a class=\"enum\" href=\"hrpc/common/socket/enum.SocketMessage.html\" title=\"enum hrpc::common::socket::SocketMessage\">SocketMessage</a>&gt; for <a class=\"struct\" href=\"hrpc/common/transport/ws_wasm/struct.WebSocket.html\" title=\"struct hrpc::common::transport::ws_wasm::WebSocket\">WebSocket</a>","synthetic":false,"types":["hrpc::common::transport::ws_wasm::WebSocket"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()