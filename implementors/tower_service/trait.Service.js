(function() {var implementors = {};
implementors["hrpc"] = [{"text":"impl&lt;S&gt; <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"enum\" href=\"hrpc/client/transport/enum.TransportRequest.html\" title=\"enum hrpc::client::transport::TransportRequest\">TransportRequest</a>&gt; for <a class=\"struct\" href=\"hrpc/client/layer/struct.Modify.html\" title=\"struct hrpc::client::layer::Modify\">Modify</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"enum\" href=\"hrpc/client/transport/enum.TransportRequest.html\" title=\"enum hrpc::client::transport::TransportRequest\">TransportRequest</a>, Response = <a class=\"enum\" href=\"hrpc/client/transport/enum.TransportResponse.html\" title=\"enum hrpc::client::transport::TransportResponse\">TransportResponse</a>&gt;,&nbsp;</span>","synthetic":false,"types":["hrpc::client::layer::Modify"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"enum\" href=\"hrpc/client/transport/enum.TransportRequest.html\" title=\"enum hrpc::client::transport::TransportRequest\">TransportRequest</a>&gt; for <a class=\"struct\" href=\"hrpc/client/transport/http/hyper/struct.Hyper.html\" title=\"struct hrpc::client::transport::http::hyper::Hyper\">Hyper</a>","synthetic":false,"types":["hrpc::client::transport::http::hyper::Hyper"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"enum\" href=\"hrpc/client/transport/enum.TransportRequest.html\" title=\"enum hrpc::client::transport::TransportRequest\">TransportRequest</a>&gt; for <a class=\"struct\" href=\"hrpc/client/transport/http/wasm/struct.Wasm.html\" title=\"struct hrpc::client::transport::http::wasm::Wasm\">Wasm</a>","synthetic":false,"types":["hrpc::client::transport::http::wasm::Wasm"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"struct\" href=\"hrpc/struct.Request.html\" title=\"struct hrpc::Request\">Request</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.1/std/primitive.unit.html\">()</a>&gt;&gt; for <a class=\"struct\" href=\"hrpc/server/router/struct.RoutesFinalized.html\" title=\"struct hrpc::server::router::RoutesFinalized\">RoutesFinalized</a>","synthetic":false,"types":["hrpc::server::router::RoutesFinalized"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"struct\" href=\"hrpc/struct.Request.html\" title=\"struct hrpc::Request\">Request</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.1/std/primitive.unit.html\">()</a>&gt;&gt; for <a class=\"struct\" href=\"hrpc/server/service/struct.HrpcService.html\" title=\"struct hrpc::server::service::HrpcService\">HrpcService</a>","synthetic":false,"types":["hrpc::server::service::HrpcService"]},{"text":"impl&lt;S&gt; <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"struct\" href=\"hrpc/struct.Request.html\" title=\"struct hrpc::Request\">Request</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.1/std/primitive.unit.html\">()</a>&gt;&gt; for <a class=\"struct\" href=\"hrpc/server/transport/http/layer/struct.ErrorIdentifierToStatus.html\" title=\"struct hrpc::server::transport::http::layer::ErrorIdentifierToStatus\">ErrorIdentifierToStatus</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"type\" href=\"hrpc/request/type.BoxRequest.html\" title=\"type hrpc::request::BoxRequest\">BoxRequest</a>, Response = <a class=\"type\" href=\"hrpc/response/type.BoxResponse.html\" title=\"type hrpc::response::BoxResponse\">BoxResponse</a>&gt;,&nbsp;</span>","synthetic":false,"types":["hrpc::server::transport::http::layer::ErrorIdentifierToStatus"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.5/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;Body&gt;&gt; for <a class=\"struct\" href=\"hrpc/server/transport/http/utils/struct.HrpcServiceToHttp.html\" title=\"struct hrpc::server::transport::http::utils::HrpcServiceToHttp\">HrpcServiceToHttp</a>","synthetic":false,"types":["hrpc::server::transport::http::utils::HrpcServiceToHttp"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"hrpc/server/trait.MakeRoutes.html\" title=\"trait hrpc::server::MakeRoutes\">MakeRoutes</a>, T, L, S&gt; <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;T&gt; for <a class=\"struct\" href=\"hrpc/server/transport/http/utils/struct.MakeRoutesToHttp.html\" title=\"struct hrpc::server::transport::http::utils::MakeRoutesToHttp\">MakeRoutesToHttp</a>&lt;M, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: <a class=\"trait\" href=\"https://docs.rs/tower-layer/0.3.1/tower_layer/trait.Layer.html\" title=\"trait tower_layer::Layer\">Layer</a>&lt;<a class=\"struct\" href=\"hrpc/server/transport/http/utils/struct.HrpcServiceToHttp.html\" title=\"struct hrpc::server::transport::http::utils::HrpcServiceToHttp\">HrpcServiceToHttp</a>, Service = S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;<a class=\"type\" href=\"hrpc/server/transport/http/type.HttpRequest.html\" title=\"type hrpc::server::transport::http::HttpRequest\">HttpRequest</a>, Response = <a class=\"type\" href=\"hrpc/server/transport/http/type.HttpResponse.html\" title=\"type hrpc::server::transport::http::HttpResponse\">HttpResponse</a>, Error = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.56.1/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;S::<a class=\"type\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html#associatedtype.Future\" title=\"type tower_service::Service::Future\">Future</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,&nbsp;</span>","synthetic":false,"types":["hrpc::server::transport::http::utils::MakeRoutesToHttp"]},{"text":"impl&lt;T, S:&nbsp;<a class=\"trait\" href=\"hrpc/server/trait.MakeRoutes.html\" title=\"trait hrpc::server::MakeRoutes\">MakeRoutes</a>&gt; <a class=\"trait\" href=\"https://docs.rs/tower-service/0.3.1/tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;T&gt; for <a class=\"struct\" href=\"hrpc/server/struct.IntoMakeService.html\" title=\"struct hrpc::server::IntoMakeService\">IntoMakeService</a>&lt;S&gt;","synthetic":false,"types":["hrpc::server::IntoMakeService"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()