(function() {var implementors = {};
implementors["hrpc"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"hrpc/client/transport/http/hyper/struct.HyperCallFuture.html\" title=\"struct hrpc::client::transport::http::hyper::HyperCallFuture\">HyperCallFuture</a>","synthetic":false,"types":["hrpc::client::transport::http::hyper::HyperCallFuture"]},{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"hrpc/server/transport/http/layer/struct.ErrorIdentifierToStatusFuture.html\" title=\"struct hrpc::server::transport::http::layer::ErrorIdentifierToStatusFuture\">ErrorIdentifierToStatusFuture</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.56.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"hrpc/response/type.BoxResponse.html\" title=\"type hrpc::response::BoxResponse\">BoxResponse</a>, <a class=\"struct\" href=\"hrpc/proto/struct.Error.html\" title=\"struct hrpc::proto::Error\">HrpcError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":false,"types":["hrpc::server::transport::http::layer::ErrorIdentifierToStatusFuture"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"hrpc/common/future/struct.Ready.html\" title=\"struct hrpc::common::future::Ready\">Ready</a>&lt;T&gt;","synthetic":false,"types":["hrpc::common::future::Ready"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()