var searchIndex = JSON.parse('{\
"hrpc":{"doc":"Common code used in hRPC code generation.","i":[[0,"client","hrpc","Common client types and functions.",null,null],[0,"socket","hrpc::client","Socket implementations.",null,null],[3,"Socket","hrpc::client::socket","A websocket, wrapped for ease of use with protobuf …",null,null],[11,"send_message","","Send a protobuf message over the websocket.",0,[[]]],[11,"get_message","","Get a message from the websocket.",0,[[]]],[11,"close","","Close this websocket. All subsequent message sending …",0,[[]]],[11,"read_only","","Converts this socket to a read-only socket.",0,[[],["readsocket",3]]],[3,"ReadSocket","","A read-only version of [<code>Socket</code>].",null,null],[11,"get_message","","Get a message from the websocket.",1,[[]]],[6,"ClientResult","hrpc::client","Convenience type for <code>Client</code> operation result.",null,null],[4,"ClientError","","Errors that can occur within <code>Client</code> operation.",null,null],[13,"Reqwest","","Occurs if reqwest, the HTTP client, returns an error.",2,null],[13,"EndpointError","","Occurs if an endpoint returns an error.",2,null],[12,"raw_error","hrpc::client::ClientError","",3,null],[12,"status","","",3,null],[12,"endpoint","","",3,null],[13,"SocketError","hrpc::client","Occurs if a websocket returns an error.",2,null],[13,"MessageDecode","","Occurs if the data server responded with can\'t be decoded …",2,null],[13,"NonProtobuf","","Occurs if the data server responded with isn\'t a protobuf …",2,null],[13,"InvalidUrl","","Occurs if the given URL is invalid.",2,null],[4,"InvalidUrlKind","","Errors that can occur while parsing the URL given to …",null,null],[13,"InvalidScheme","","Occurs if URL scheme isn\'t <code>http</code> or <code>https</code>.",4,null],[3,"Client","","Generic client implementation with common methods.",null,null],[11,"new","","Creates a new client.",5,[[["url",3],["client",3]],["clientresult",6]]],[11,"execute_request","","Executes an unary request returns the decoded response.",5,[[["message",8],["request",3],["str",15]]]],[11,"connect_socket","","Connect a socket with the server and return it.",5,[[["request",3],["str",15]]]],[11,"connect_socket_req","","Connect a socket with the server, send a message and …",5,[[["request",3],["str",15]]]],[0,"server","hrpc","Common server types and functions.",null,null],[3,"StatusCode","hrpc::server","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).",null,null],[8,"CustomError","","Trait that needs to be implemented to use an error type …",null,null],[10,"code","","Status code that will be used in client response.",6,[[],["statuscode",3]]],[10,"message","","Message that will be used in client response.",6,[[],[["vec",3],["u8",15]]]],[11,"decode_error","","Return a message decode error.",6,[[]]],[11,"not_found_error","","Return a not fonud error.",6,[[]]],[11,"internal_server_error","","Return an internal server error.",6,[[]]],[5,"json_err_bytes","","Creates a JSON error response from a message.",null,[[["str",15]],[["vec",3],["u8",15]]]],[23,"async_trait","hrpc","",null,null],[3,"Request","","A hRPC request.",null,null],[11,"new","","Create a new request with the specified message.",7,[[]]],[11,"empty","","Create an empty request.",7,[[],["request",3]]],[11,"header","","Change / add a header.",7,[[["headername",3],["headervalue",3]]]],[11,"message","","Change the contained message.",7,[[],["request",3]]],[11,"get_message","","Get a reference to the inner message.",7,[[]]],[11,"get_header","","Get a header.",7,[[["headername",3]],[["option",4],["headervalue",3]]]],[11,"into_parts","","Destructure this request into parts.",7,[[]]],[11,"from_parts","","Create a request from parts.",7,[[]]],[8,"IntoRequest","","Trait used for blanket impls on generated protobuf types.",null,null],[10,"into_request","","Convert this to a request.",8,[[],["request",3]]],[14,"serve_multiple","","Serves multiple services\' filters on the same address.",null,null],[14,"include_proto","","Include generated proto server and client items.",null,null],[11,"into_request","hrpc::client::socket","",0,[[],["request",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",1,[[],["request",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_request","hrpc::client","",2,[[],["request",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_request","","",4,[[],["request",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_request","","",5,[[],["request",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_request","hrpc::server","",9,[[],["request",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"equivalent","","",9,[[],["bool",15]]],[11,"into_request","hrpc","",7,[[],["request",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"try_from","hrpc::server","",9,[[["str",15]],[["statuscode",3],["result",4]]]],[11,"try_from","","",9,[[["u16",15]],[["result",4],["statuscode",3]]]],[11,"try_from","","",9,[[],[["result",4],["statuscode",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",9,[[]]],[11,"partial_cmp","","",9,[[["statuscode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["statuscode",3]],["bool",15]]],[11,"le","","",9,[[["statuscode",3]],["bool",15]]],[11,"gt","","",9,[[["statuscode",3]],["bool",15]]],[11,"ge","","",9,[[["statuscode",3]],["bool",15]]],[11,"from","","",9,[[["statuscode",3]],["statuscode",3]]],[11,"default","","",9,[[],["statuscode",3]]],[11,"clone","","",9,[[],["statuscode",3]]],[11,"cmp","","",9,[[["statuscode",3]],["ordering",4]]],[11,"from_str","","",9,[[["str",15]],[["invalidstatuscode",3],["statuscode",3],["result",4]]]],[11,"eq","","",9,[[["u16",15]],["bool",15]]],[11,"eq","","",9,[[["statuscode",3]],["bool",15]]],[11,"ne","","",9,[[["statuscode",3]],["bool",15]]],[11,"into_response","","",9,[[],[["response",3],["body",3]]]],[11,"into_request","hrpc","",7,[[],["request",3]]],[11,"from","hrpc::client","",2,[[["error",3]]]],[11,"from","","",2,[[["decodeerror",3]]]],[11,"from","","",2,[[["error",4]]]],[11,"clone","","",5,[[],["client",3]]],[11,"clone","hrpc::client::socket","",0,[[]]],[11,"clone","","",1,[[],["readsocket",3]]],[11,"fmt","hrpc::client","",5,[[["formatter",3]],["result",6]]],[11,"fmt","hrpc::client::socket","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","hrpc::client","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"source","","",2,[[],[["stderror",8],["option",4]]]],[11,"from_u16","hrpc::server","Converts a u16 to a status code.",9,[[["u16",15]],[["invalidstatuscode",3],["statuscode",3],["result",4]]]],[11,"from_bytes","","Converts a &[u8] to a status code",9,[[],[["invalidstatuscode",3],["statuscode",3],["result",4]]]],[11,"as_u16","","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.",9,[[],["u16",15]]],[11,"as_str","","Returns a &str representation of the <code>StatusCode</code>",9,[[],["str",15]]],[11,"canonical_reason","","Get the standardised <code>reason-phrase</code> for this status code.",9,[[],[["option",4],["str",15]]]],[11,"is_informational","","Check if status is within 100-199.",9,[[],["bool",15]]],[11,"is_success","","Check if status is within 200-299.",9,[[],["bool",15]]],[11,"is_redirection","","Check if status is within 300-399.",9,[[],["bool",15]]],[11,"is_client_error","","Check if status is within 400-499.",9,[[],["bool",15]]],[11,"is_server_error","","Check if status is within 500-599.",9,[[],["bool",15]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",9,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",9,null],[18,"PROCESSING","","102 Processing [RFC2518]",9,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",9,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",9,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",9,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",9,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",9,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",9,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",9,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",9,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",9,null],[18,"IM_USED","","226 IM Used [RFC3229]",9,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",9,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",9,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",9,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",9,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",9,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",9,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",9,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",9,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",9,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",9,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",9,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",9,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",9,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",9,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",9,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",9,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",9,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",9,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",9,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",9,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",9,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",9,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",9,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",9,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",9,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",9,null],[18,"IM_A_TEAPOT","","418 I\'m a teapot [curiously not registered by IANA but …",9,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",9,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",9,null],[18,"LOCKED","","423 Locked [RFC4918]",9,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",9,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",9,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",9,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",9,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",9,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",9,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",9,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",9,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",9,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",9,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",9,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",9,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",9,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",9,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",9,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",9,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",9,null]],"p":[[3,"Socket"],[3,"ReadSocket"],[4,"ClientError"],[13,"EndpointError"],[4,"InvalidUrlKind"],[3,"Client"],[8,"CustomError"],[3,"Request"],[8,"IntoRequest"],[3,"StatusCode"]]},\
"hrpc_build":{"doc":"","i":[[0,"client","hrpc_build","Service code generation for client",null,null],[5,"generate","hrpc_build::client","Generate service for client.",null,[[["str",15]],["tokenstream",3]]],[0,"server","hrpc_build","Service code generation for server",null,null],[5,"generate","hrpc_build::server","Generate service for Server.",null,[[["str",15]],["tokenstream",3]]],[5,"compile_protos","hrpc_build","Simple <code>.proto</code> compiling. Use [<code>configure</code>] instead if you …",null,[[],["result",6]]],[5,"configure","","Configure <code>tonic-build</code> code generation.",null,[[],["builder",3]]],[3,"Builder","","Service generator builder.",null,null],[8,"Service","","Service generation trait.",null,null],[18,"CODEC_PATH","","Path to the codec.",0,null],[16,"Comment","","Comment type.",0,null],[16,"Method","","Method type.",0,null],[10,"name","","Name of service.",0,[[],["str",15]]],[10,"package","","Package name of service.",0,[[],["str",15]]],[10,"identifier","","Identifier used to generate type name.",0,[[],["str",15]]],[10,"methods","","Methods provided by service.",0,[[]]],[10,"comment","","Get comments about this item.",0,[[]]],[8,"Method","","Method generation trait.",null,null],[18,"CODEC_PATH","","Path to the codec.",1,null],[16,"Comment","","Comment type.",1,null],[10,"name","","Name of method.",1,[[],["str",15]]],[10,"identifier","","Identifier used to generate type name.",1,[[],["str",15]]],[10,"client_streaming","","Method is streamed by client.",1,[[],["bool",15]]],[10,"server_streaming","","Method is streamed by server.",1,[[],["bool",15]]],[10,"comment","","Get comments about this item.",1,[[]]],[10,"options","","Get options of this item.",1,[[],["vec",3]]],[10,"request_response_name","","Type name of request and response.",1,[[["str",15]]]],[5,"fmt","","Format files under the out_dir with rustfmt",null,[[["str",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"clone","","",2,[[],["builder",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"build_client","","Enable or disable hRPC client code generation.",2,[[["bool",15]]]],[11,"build_server","","Enable or disable hRPC server code generation.",2,[[["bool",15]]]],[11,"format","","Enable the output to be formated by rustfmt.",2,[[["bool",15]]]],[11,"out_dir","","Set the output directory to generate code to.",2,[[]]],[11,"extern_path","","Declare externally provided Protobuf package or type.",2,[[]]],[11,"field_attribute","","Add additional attribute to matched messages, enums, and …",2,[[["asref",8],["str",15]]]],[11,"type_attribute","","Add additional attribute to matched messages, enums, and …",2,[[["asref",8],["str",15]]]],[11,"proto_path","","Set the path to where tonic will search for the …",2,[[]]],[11,"compile","","Compile the .proto files and execute code generation.",2,[[],["result",6]]],[11,"compile_with_config","","Compile the .proto files and execute code generation …",2,[[["config",3]],["result",6]]]],"p":[[8,"Service"],[8,"Method"],[3,"Builder"]]},\
"interop":{"doc":"","i":[[0,"mu_client","interop","Generated client implementations.",null,null],[3,"MuClient","interop::mu_client","",null,null],[12,"inner","","",0,null],[11,"new","","",0,[[["url",3],["reqwestclient",3]],["clientresult",6]]],[11,"mu","","",0,[[]]],[11,"mu_mute","","",0,[[]]],[0,"mu_server","interop","Generated server implementations.",null,null],[8,"Mu","interop::mu_server","Generated trait containing hRPC methods that should be …",null,null],[18,"SOCKET_PING_PERIOD","","",1,null],[18,"SOCKET_PING_DATA","","",1,null],[16,"Error","","",1,null],[10,"mu","","",1,[[["request",3],["ping",3]],[["box",3],["pin",3]]]],[10,"mu_mute","","",1,[[["request",3],["option",4],["ping",3]],[["pin",3],["box",3]]]],[3,"MuServer","","",null,null],[12,"inner","","",2,null],[11,"new","","Create a new service server.",2,[[]]],[11,"serve","","Start serving.",2,[[]]],[11,"filters","","Extract <code>warp</code> filters.",2,[[],["boxedfilter",3]]],[3,"Ping","interop","",null,null],[12,"mu","","",3,null],[3,"Pong","","",null,null],[12,"mu","","",4,null],[5,"main","","",null,[[]]],[5,"client","","",null,[[]]],[5,"server","","",null,[[]]],[3,"Server","","",null,null],[12,"creation_timestamp","","",5,null],[4,"ServerError","","",null,null],[13,"PingEmpty","","",6,null],[11,"from","interop::mu_client","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","interop::mu_server","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","interop","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_request","","",3,[[],["request",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_request","","",4,[[],["request",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_request","","",5,[[],["request",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_request","","",6,[[],["request",3]]],[11,"vzip","","",6,[[]]],[11,"mu","","",5,[[["request",3],["ping",3]],[["pin",3],["box",3]]]],[11,"mu_mute","","",5,[[["ping",3],["request",3],["option",4]],[["pin",3],["box",3]]]],[11,"clone","","",3,[[],["ping",3]]],[11,"clone","","",4,[[],["pong",3]]],[11,"clone","interop::mu_client","",0,[[],["muclient",3]]],[11,"clone","interop::mu_server","",2,[[],["muserver",3]]],[11,"default","interop","",3,[[]]],[11,"default","","",4,[[]]],[11,"eq","","",3,[[["ping",3]],["bool",15]]],[11,"ne","","",3,[[["ping",3]],["bool",15]]],[11,"eq","","",4,[[["pong",3]],["bool",15]]],[11,"ne","","",4,[[["pong",3]],["bool",15]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","interop::mu_client","",0,[[["formatter",3]],["result",6]]],[11,"fmt","interop::mu_server","",2,[[["formatter",3]],["result",6]]],[11,"fmt","interop","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"code","","",6,[[],["statuscode",3]]],[11,"message","","",6,[[],[["vec",3],["u8",15]]]],[11,"encode_raw","","",3,[[]]],[11,"merge_field","","",3,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",3,[[],["usize",15]]],[11,"clear","","",3,[[]]],[11,"encode_raw","","",4,[[]]],[11,"merge_field","","",4,[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",4,[[],["usize",15]]],[11,"clear","","",4,[[]]]],"p":[[3,"MuClient"],[8,"Mu"],[3,"MuServer"],[3,"Ping"],[3,"Pong"],[3,"Server"],[4,"ServerError"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);