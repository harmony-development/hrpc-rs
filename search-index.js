var searchIndex = JSON.parse('{\
"chat":{"doc":"","t":[6,0,3,3,11,11,11,11,0,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11],"n":["BoxError","chat","Empty","Message","borrow","borrow","borrow_mut","borrow_mut","chat_client","chat_server","clear","clear","clone","clone","clone_into","clone_into","content","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","into_response","into_response","merge_field","merge_field","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ChatClient","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","new_inner","new_transport","send_message","stream_messages","to_owned","try_from","try_into","type_id","vzip","Chat","ChatServer","borrow","borrow_mut","clone","clone_into","from","into","make_routes","new","send_message","send_message_middleware","serve","stream_messages","stream_messages_middleware","to_owned","try_from","try_into","type_id","vzip"],"q":["chat","","chat::chat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","chat::chat::chat_client","","","","","","","","","","","","","","","","","","chat::chat::chat_server","","","","","","","","","","","","","","","","","","",""],"d":["A boxed error.","<code>chat</code> package protobuf definitions and service.","An empty message.","A chat message.","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chat service.","","","","","","","","Create a new client using HTTP transport.","Create a new client using the provided generic client.","Create a new client using the provided transport.","Endpoint to send a chat message.","Endpoint to stream chat messages.","","","","","","Generated trait containing hRPC methods that should be …","Chat service.","","","","","","","","Create a new service server.","Endpoint to send a chat message.","Optional middleware for this RPC.","Serves the service with HTTP transport.","Endpoint to stream chat messages.","Optional middleware for this RPC.","","","","",""],"i":[0,0,0,0,1,2,1,2,0,0,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,5,5,4,5,5,4,4,4,4,4],"f":[null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["message",3]],[[],["empty",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["message",3]],["bool",15]],[[["empty",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["response",3]],[[],["response",3]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["message",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[],["chatclient",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["clientresult",6]],[[["client",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["routes",3]],[[]],[[["hrpcrequest",3,["message"]],["message",3]],[["boxfuture",6,["serverresult"]],["serverresult",6,["hrpcresponse"]]]],[[],[["hrpclayer",3],["option",4,["hrpclayer"]]]],[[["tosocketaddrs",8]]],[[["message",3],["empty",3],["hrpcrequest",3],["socket",3,["message","empty"]]],[["boxfuture",6,["serverresult"]],["serverresult",6]]],[[],[["hrpclayer",3],["option",4,["hrpclayer"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Message"],[3,"Empty"],[3,"ChatClient"],[3,"ChatServer"],[8,"Chat"]]},\
"chat_client":{"doc":"","t":[5],"n":["main"],"q":["chat_client"],"d":[""],"i":[0],"f":[[[],[["boxerror",6],["result",4,["boxerror"]]]]],"p":[]},\
"chat_common":{"doc":"","t":[6,0,3,3,11,11,11,11,0,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11],"n":["BoxError","chat","Empty","Message","borrow","borrow","borrow_mut","borrow_mut","chat_client","chat_server","clear","clear","clone","clone","clone_into","clone_into","content","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","into_response","into_response","merge_field","merge_field","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ChatClient","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","new_inner","new_transport","send_message","stream_messages","to_owned","try_from","try_into","type_id","vzip","Chat","ChatServer","borrow","borrow_mut","clone","clone_into","from","into","make_routes","new","send_message","send_message_middleware","serve","stream_messages","stream_messages_middleware","to_owned","try_from","try_into","type_id","vzip"],"q":["chat_common","","chat_common::chat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","chat_common::chat::chat_client","","","","","","","","","","","","","","","","","","chat_common::chat::chat_server","","","","","","","","","","","","","","","","","","",""],"d":["A boxed error.","<code>chat</code> package protobuf definitions and service.","An empty message.","A chat message.","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chat service.","","","","","","","","Create a new client using HTTP transport.","Create a new client using the provided generic client.","Create a new client using the provided transport.","Endpoint to send a chat message.","Endpoint to stream chat messages.","","","","","","Generated trait containing hRPC methods that should be …","Chat service.","","","","","","","","Create a new service server.","Endpoint to send a chat message.","Optional middleware for this RPC.","Serves the service with HTTP transport.","Endpoint to stream chat messages.","Optional middleware for this RPC.","","","","",""],"i":[0,0,0,0,1,2,1,2,0,0,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,5,5,4,5,5,4,4,4,4,4],"f":[null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["message",3]],[[],["empty",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["message",3]],["bool",15]],[[["empty",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["response",3]],[[],["response",3]],[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["message",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[],["chatclient",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["clientresult",6,["hypererror"]],["hypererror",4]]],[[["client",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["routes",3]],[[]],[[["hrpcrequest",3,["message"]],["message",3]],[["serverresult",6,["hrpcresponse"]],["boxfuture",6,["serverresult"]]]],[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[["tosocketaddrs",8]]],[[["empty",3],["hrpcrequest",3],["socket",3,["message","empty"]],["message",3]],[["serverresult",6],["boxfuture",6,["serverresult"]]]],[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Message"],[3,"Empty"],[3,"ChatClient"],[3,"ChatServer"],[8,"Chat"]]},\
"chat_server":{"doc":"","t":[3,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11],"n":["ChatService","borrow","borrow_mut","from","into","main","message_broadcast","new","send_message","send_message_middleware","stream_messages","stream_messages_middleware","try_from","try_into","type_id","vzip"],"q":["chat_server","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[]],[[]],[[],[["boxerror",6],["result",4,["boxerror"]]]],null,[[]],[[["request",3,["message"]],["message",3]],[["boxfuture",6,["serverresult"]],["serverresult",6,["response"]]]],[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[["message",3],["request",3],["socket",3,["message","empty"]],["empty",3]],[["boxfuture",6,["serverresult"]],["serverresult",6]]],[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"ChatService"]]},\
"chat_wasm_client":{"doc":"","t":[6,3,4,13,13,3,13,13,13,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["ClientResult","Model","Msg","Nothing","PollMessagesResult","Props","SendMessage","SendMessageResult","SocketCreateResult","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","client","clone","clone_into","create","current_message","eq","from","from","from","into","into","into","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","into_prop_value","last_error","main","messages","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","view","vzip","vzip","vzip","0","0","0","res","socket"],"q":["chat_wasm_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","chat_wasm_client::Msg","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,0,1,1,1,1,2,3,1,2,3,3,3,3,3,2,2,3,1,2,3,1,2,3,1,1,2,2,3,3,2,0,2,3,1,2,3,1,2,3,1,2,3,2,2,1,2,3,4,5,6,7,7],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["props",3]],[[]],[[["context",3]]],null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],null,[[],[["boxerror",6],["result",4,["boxerror"]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["context",3]],["bool",15]],[[["context",3]],["html",6]],[[]],[[]],[[]],null,null,null,null,null],"p":[[4,"Msg"],[3,"Model"],[3,"Props"],[13,"SendMessage"],[13,"SendMessageResult"],[13,"SocketCreateResult"],[13,"PollMessagesResult"]]},\
"client":{"doc":"","t":[5],"n":["main"],"q":["client"],"d":[""],"i":[0],"f":[[[],[["result",4,["boxerror"]],["boxerror",6]]]],"p":[]},\
"hello_world":{"doc":"","t":[6,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11],"n":["BoxError","hello","WelcomeUserRequest","WelcomeUserResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","greeter_client","greeter_server","into","into","into_request","into_request","into_response","into_response","merge_field","merge_field","ne","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_name","vzip","vzip","welcome_message","GreeterClient","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","new_inner","new_transport","to_owned","try_from","try_into","type_id","vzip","welcome_user","Greeter","GreeterServer","borrow","borrow_mut","clone","clone_into","from","into","make_routes","new","serve","to_owned","try_from","try_into","type_id","vzip","welcome_user","welcome_user_middleware"],"q":["hello_world","","hello_world::hello","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hello_world::hello::greeter_client","","","","","","","","","","","","","","","","","hello_world::hello::greeter_server","","","","","","","","","","","","","","","","",""],"d":["A boxed error.","<code>hello</code> package protobuf definitions and service.","Request used in <code>WelcomeUser</code> endpoint.","Response used in <code>WelcomeUser</code> endpoint.","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","The user name of the user you want to welcome.","","","The welcome message.","The greeter service.","","","","","","","","Create a new client using HTTP transport.","Create a new client using the provided generic client.","Create a new client using the provided transport.","","","","","","Endpoint to welcome a user.","Generated trait containing hRPC methods that should be …","The greeter service.","","","","","","","","Create a new service server.","Serves the service with HTTP transport.","","","","","","Endpoint to welcome a user.","Optional middleware for this RPC."],"i":[0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["welcomeuserrequest",3]],[[],["welcomeuserresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["welcomeuserrequest",3]],["bool",15]],[[["welcomeuserresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["response",3]],[[],["response",3]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["welcomeuserrequest",3]],["bool",15]],[[["welcomeuserresponse",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,[[]],[[]],[[],["greeterclient",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["hypererror",4],["clientresult",6,["hypererror"]]]],[[["client",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["routes",3]],[[]],[[["tosocketaddrs",8]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["welcomeuserrequest",3],["hrpcrequest",3,["welcomeuserrequest"]]],[["boxfuture",6,["serverresult"]],["serverresult",6,["hrpcresponse"]]]],[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]]],"p":[[3,"WelcomeUserRequest"],[3,"WelcomeUserResponse"],[3,"GreeterClient"],[3,"GreeterServer"],[8,"Greeter"]]},\
"hrpc":{"doc":"Common code used in hRPC code generation.","t":[6,17,17,3,3,14,14,0,11,11,11,11,5,0,14,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,14,0,0,0,0,11,11,11,11,11,11,11,11,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,0,11,11,11,11,0,11,11,0,11,0,11,11,11,11,4,6,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,13,13,13,13,4,4,4,13,13,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,4,11,11,11,11,11,0,11,11,11,11,11,11,0,13,13,6,3,3,4,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,13,13,13,13,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,13,6,6,13,3,13,13,13,13,3,3,4,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,0,0,0,0,17,8,5,10,10,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,3,4,13,13,3,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,8,3,3,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,6,8,3,3,12,11,11,11,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,10,11,11,11,0,0,0,0,11,11,11,0,11,11,11,11,11,11,11,11,11,0,11,11,11,6,23,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,16,8,0,0,10,6,3,6,6,3,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,3,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11],"n":["BoxError","HRPC_CONTENT_MIMETYPE","HRPC_SPEC_VERSION","Request","Response","bail","bail_result","body","borrow","borrow","borrow_mut","borrow_mut","box_error","client","combine_services","common","decode","encode","exports","fmt","fmt","from","from","from","from","from","from","get_or_insert_header_map","get_or_insert_header_map","get_or_insert_http_extensions","get_or_insert_http_extensions","header_map","header_map","header_map_mut","header_map_mut","http_extensions","http_extensions","http_extensions_mut","http_extensions_mut","http_method","http_uri","http_version","include_proto","into","into","into_request","into_response","make_handler","proto","request","response","server","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Body","BodyResult","aggregate","borrow","borrow_mut","empty","fmt","from","from","full","into","new","poll_data","poll_next","poll_trailers","try_from","try_into","try_poll_next","type_id","vzip","Client","borrow","borrow_mut","clone","clone_into","connect_socket","connect_socket_req","error","execute_request","fmt","from","into","layer","layer","new","socket","to_owned","transport","try_from","try_into","type_id","vzip","ClientError","ClientResult","ContentNotSupported","EndpointError","IncompatibleSpecVersion","IoError","MessageDecode","Transport","borrow","borrow","borrow_mut","borrow_mut","cause","description","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_os_error","get_mut","get_ref","into","into","into_inner","into_non_blocking","kind","last_os_error","new","raw_os_error","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","endpoint","hrpc_error","Modify","ModifyFuture","ModifyLayer","ModifyReq","ModifyResp","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","from","from","from","into","into","into","into_future","layer","new","new","new_request","new_response","poll","poll_ready","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","CallResult","GenericClient","Socket","Socket","Transport","TransportError","TransportRequest","TransportResponse","Unary","Unary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","box_socket_stream_sink","extract_socket","extract_unary","fmt","fmt","from","from","from","from","from","from","http","into","into","into","mock","new_socket","new_unary","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","rx","tx","InvalidScheme","InvalidServerUrl","borrow","borrow_mut","fmt","fmt","from","hyper","into","to_string","try_from","try_into","type_id","vzip","wasm","FailedRequestBuilder","Http","HttpClient","Hyper","HyperCallFuture","HyperError","InvalidProtocol","InvalidUrl","SocketInitError","SocketInitError","Tungstenite","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone_into","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","http_client","into","into","into","into","into_future","new","new_with_hyper","poll","poll_ready","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","0","0","BodyError","HttpError","InvalidServerUrl","SocketInitError","SocketProtocols","Wasm","WasmError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","check_spec_version","clone","clone_into","fmt","fmt","fmt","from","from","from","into","into","into","new","new","poll_ready","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","Mock","MockCallFuture","MockError","Receive","Send","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","clone","clone_into","fmt","fmt","from","from","from","into","into","into","into_future","new","poll","poll_ready","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","0","extensions","future","socket","transport","Extensions","borrow","borrow_mut","clear","contains","default","fmt","from","get","get_mut","insert","into","is_empty","len","new","remove","try_from","try_into","type_id","vzip","Ready","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_future","into_inner","poll","ready","to_owned","try_from","try_into","try_poll","type_id","vzip","Binary","BoxedSocketRx","BoxedSocketTx","Close","CombineError","MessageDecode","Ping","Pong","Protocol","ReadSocket","Socket","SocketError","SocketMessage","Text","Transport","WriteSocket","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","close","close","combine","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","ping","ping","receive_message","receive_message","send_error","send_error","send_message","send_message","source","split","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","http","mock","tokio_tungstenite","ws_wasm","HRPC_VERSION_HEADER","HeaderMapExt","content_header_value","header_contains_str","header_eq","version_header_name","version_header_value","ws_version","ws_version_header_value","MockReceiver","MockSender","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","into","into","new_mock_channels","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","WebSocket","borrow","borrow_mut","from","into","new","poll_close","poll_flush","poll_next","poll_ready","start_send","try_from","try_into","try_poll_next","type_id","vzip","WebSocket","borrow","borrow_mut","from","into","new","poll_close","poll_flush","poll_next","poll_ready","start_send","try_from","try_into","try_poll_next","type_id","vzip","DecodeBodyError","InvalidBody","InvalidProtoMessage","borrow","borrow_mut","fmt","fmt","from","into","source","to_string","try_from","try_into","type_id","vzip","0","0","encode_protobuf_message","encode_protobuf_message_to","Error","HrpcErrorIdentifier","InternalServerError","NotFound","NotHrpcErrorIdentifier","NotImplemented","ResourceExhausted","RetryInfo","Unavailable","as_id","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","default","default","details","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_str","hash","human_message","identifier","into","into","into","into","into_request","into_request","into_response","into_response","merge_field","merge_field","ne","ne","new_internal_server_error","new_not_found","new_not_implemented","new_resource_exhausted","partial_cmp","retry_after","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_details","with_identifier","with_message","BoxRequest","IntoRequest","Parts","Request","body","borrow","borrow_mut","empty","endpoint","endpoint","endpoint_mut","extensions","extensions","extensions_mut","fmt","from","from","into","into_message","into_request","new","new_with_body","try_from","try_into","type_id","vzip","BoxResponse","IntoResponse","Parts","Response","body","borrow","borrow_mut","empty","extensions","extensions","extensions_mut","fmt","from","from","into","into_message","into_response","new","new_with_body","try_from","try_into","type_id","vzip","IntoMakeService","LayeredService","MakeRoutes","ServiceStack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone","clone_into","clone_into","clone_into","combine_with","error","from","from","from","into","into","into","into_make_service","layer","make_routes","make_routes","make_routes","poll_ready","prelude","router","service","socket","to_owned","to_owned","to_owned","transport","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utils","vzip","vzip","vzip","ServerResult","handler","Routes","RoutesFinalized","any","borrow","borrow","borrow_mut","borrow_mut","build","call","combine_with","default","from","from","into","into","layer","layer_all","new","poll_ready","route","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","HrpcLayer","HrpcLayerExt","HrpcService","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","from","from","into","into","into_hrpc_layer","layer","layer","new","new","not_found","poll_ready","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","Transport","http","mock","serve","BoxBody","HttpConfig","HttpRequest","HttpResponse","Hyper","borrow","borrow","borrow_mut","borrow_mut","box_body","build","clone","clone_into","configure_hyper","configure_tls_files","default","fmt","from","from","http1_half_close","http1_keep_alive","http1_only","http1_preserve_header_case","http1_title_case_headers","http1_writev","http2_adaptive_window","http2_initial_connection_window_size","http2_initial_stream_window_size","http2_keep_alive_interval","http2_keep_alive_timeout","http2_max_concurrent_streams","http2_max_frame_size","http2_only","into","into","layer","layer","max_buf_size","new","new","pipeline_flush","serve","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","ErrorIdentifierToStatus","ErrorIdentifierToStatusFuture","ErrorIdentifierToStatusLayer","ToStatus","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","from","from","from","into","into","into","into_future","layer","new","new","poll","poll_ready","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","HrpcServiceToHttp","HrpcServiceToHttpLayer","HttpService","MakeRoutesToHttp","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","from","from","from","into","into","into","layer","layer","make_service","new","new","poll_ready","poll_ready","poll_ready","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Mock","borrow","borrow_mut","from","into","new","serve","try_from","try_into","type_id","vzip"],"q":["hrpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::body","","","","","","","","","","","","","","","","","","","","hrpc::client","","","","","","","","","","","","","","","","","","","","","","hrpc::client::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::client::error::ClientError","","","","hrpc::client::layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::client::transport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::client::transport::TransportError","","hrpc::client::transport::TransportRequest","","hrpc::client::transport::TransportResponse","","","hrpc::client::transport::http","","","","","","","","","","","","","","","hrpc::client::transport::http::hyper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::client::transport::http::hyper::HyperError","","","","hrpc::client::transport::http::hyper::SocketInitError","hrpc::client::transport::http::wasm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::client::transport::http::wasm::WasmError","","","","hrpc::client::transport::mock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::client::transport::mock::MockError","hrpc::common","","","","hrpc::common::extensions","","","","","","","","","","","","","","","","","","","","hrpc::common::future","","","","","","","","","","","","","","","","","","hrpc::common::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::common::socket::SocketError","","","hrpc::common::socket::SocketMessage","","","","hrpc::common::transport","","","","hrpc::common::transport::http","","","","","","","","","hrpc::common::transport::mock","","","","","","","","","","","","","","","","","","","","","","hrpc::common::transport::tokio_tungstenite","","","","","","","","","","","","","","","","hrpc::common::transport::ws_wasm","","","","","","","","","","","","","","","","hrpc::decode","","","","","","","","","","","","","","","hrpc::decode::DecodeBodyError","","hrpc::encode","","hrpc::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::request","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::response","","","","","","","","","","","","","","","","","","","","","","","hrpc::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::error","hrpc::server::prelude","hrpc::server::router","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::transport","","","","","hrpc::server::transport::http","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::transport::http::layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::transport::http::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::transport::mock","","","","","","","","","",""],"d":["Alias for a type-erased error type.","The hRPC protobuf mimetype.","The hRPC spec version this version of <code>hrpc-rs</code> implements.","A hRPC request.","hRPC response type.","Bails with an error.","Takes a <code>Result</code>, returns the error if it’s <code>Err</code>, otherwise …","Body utitilies and types.","","","","","Convenience function for converting some error to a boxed …","Common client types and functions.","Combines a list of services that implement <code>MakeRoutes</code>.","Common utilities.","Decoding utilities.","Encoding utilities.","Some re-exported crates that might be useful while writing …","","","","","","","","","Get a mutable reference to the header map, inserting a new …","Get a mutable reference to the header map, inserting a new …","Get a mutable reference to the HTTP extensions, inserting …","Get a mutable reference to the HTTP extensions, inserting …","Get an immutable reference to the header map.","Get an immutable reference to the header map.","Get a mutable reference to the header map.","Get a mutable reference to the header map.","Get an immutable reference to the HTTP extensions.","Get an immutable reference to the HTTP extensions.","Get a mutable reference to the HTTP extensions.","Get a mutable reference to the HTTP extensions.","Get an immutable reference to the HTTP method.","Get an immutable reference to the HTTP URI.","Get an immutable reference to the HTTP version.","Include generated proto server and client items.","","","","","Macro to workaround <code>async fn</code>s not being allowed in traits. …","The hRPC generated protocol.","The <code>Request</code> type used by hRPC.","The <code>Response</code> type used by hRPC.","Common server types and functions.","","","","","","","","","A request or response body.","Type of the item that a <code>Body</code> produces.","Aggregate this body into a single <code>Buf</code>.","","","Create a new, empty body.","","","","Create a body using a single chunk of data.","","Create a new body by wrapping a stream.","","","","","","","","","Generic client implementation with common methods.","","","","","Connect a socket with the server and return it.","Connect a socket with the server, send a message and …","Error types.","Executes a unary request and returns the decoded response.","","","","Useful layers to use with the generic client.","Layer this client with a new <code>Layer</code>.","Create a new client using the provided transport.","hRPC socket used for streaming RPCs.","","hRPC client transports.","","","","","Errors that can occur within <code>Client</code> operation.","Convenience type for <code>Client</code> operation result.","Occurs if the data server responded with is not supported …","Occurs if an endpoint returns an error.","Occurs if the spec implemented on server doesn’t match …","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","Occurs if the data server responded with could not be …","Occures if the underlying transport yields an error.","","","","","","","","","","","","","","","","","","","","","","Converts a <code>NulError</code> into a <code>io::Error</code>.","Converts an <code>ErrorKind</code> into an <code>Error</code>.","","Convert a <code>serde_json::Error</code> into an <code>io::Error</code>.","Creates a new instance of an <code>Error</code> from a particular OS …","Returns a mutable reference to the inner error wrapped by …","Returns a reference to the inner error wrapped by this …","","","Consumes the <code>Error</code>, returning its inner error (if any).","","Returns the corresponding <code>ErrorKind</code> for this error.","Returns an error representing the last OS error which …","Creates a new I/O error from a known kind of error as well …","Returns the OS error that this error represents (if any).","","","","","","","","","","","","","","","The endpoint for which this error happened.","The hRPC error.","Service that lets you modify / inspect requests and …","Future for <code>Modify</code>.","Layer for creating <code>Modify</code> instances. Please see it’s …","Function to modify a request.","Function to modify a response.","","","","","","","","","","","","","","","","","","","","Create a new layer.","Create a new service by wrapping a given service.","Create a new layer that only modifies requests.","Create a new layer that only modifies responses.","","","","","","","","","","","","","","","","","","A type alias that represents a result of a call.","A generic client error. This can be used by transports to …","A socket response.","A socket request.","A transport specific error.","Error type that transports need to return.","A request that a transport can get.","A response that a transport can return.","A unary response.","A unary request.","","","","","","","Function that helps you meet bounds for boxed socket …","Extracts a socket response from this transport response.","Extracts a unary response from this transport response.","","","","","","","","","Client HTTP transport.","","","","The mock transport. Useful for testing.","Create a new socket transport response.","Create a new unary transport response.","","","","","","","","","","","","","","","","","","Receiver part of the socket.","Sender part of the socket.","Occurs if URL scheme isn’t <code>http</code> or <code>https</code>.","Errors that can occur while parsing the URL given to …","","","","","","A HTTP client transport implementation using <code>hyper</code>.","","","","","","","A HTTP transport that compiles to WASM and works on the …","Occurs if request creation fails.","Occurs if hyper, the HTTP client, returns an error.","A <code>hyper</code> HTTP client that supports HTTPS.","HTTP transport implemented using <code>hyper</code>.","Call future used by this transport.","Errors that <code>Hyper</code> transport might produce.","Occurs if the server sent an invalid protocol (not <code>hrpc</code>).","Occurs if the given URL is invalid.","Errors that can occur on socket creation.","Occurs if socket creation.","Occurs if socket creation fails with a tungstenite error.","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>HttpClient</code> that you can use.","","","","","","Create a new HTTP transport using the provided URI as …","Create a new HTTP transport using the provided URI as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Occurs if an error happens while aggregating a request …","Occurs if <code>reqwasm</code> returns an error.","Occurs if the URL passed to <code>Wasm</code> is invalid.","Occurs if an error happens while initializing a socket.","Type that can be inserted into a [<code>Request</code>]’s extensions …","HTTP client that compiles to WASM and works on the Web.","Errors that can occur while using <code>Wasm</code> client.","","","","","","","","Set whether to check for spec version.","","","","","","","","","","","","Create a new <code>SocketProtocols</code>.","Create a new client.","","","","","","","","","","","","","","","","","","","","A client that uses a channel to send requests to a …","Future used by <code>Mock</code>.","Errors this client can return.","Occurs if receiving a response fails. Only happens if …","Occurs if sending a request fails. Only happens if …","","","","","","","","","","","","","","","","","","","Create a new mock client.","","","","","","","","","","","","","","","","","","","Extension type used by <code>crate::Request</code> and <code>crate::Response</code>.","Common future types used by <code>hrpc-rs</code>.","Common code to work with sockets.","Common code to work with transports.","A type map of transport extensions.","","","Clear the <code>Extensions</code> of all inserted extensions.","Check if a type is contained in this <code>Extensions</code>.","","","","Get a reference to a type previously inserted on this …","Get a mutable reference to a type previously inserted on …","Insert a type into this <code>Extensions</code>.","","Check whether the extension set is empty or not.","Get the numer of extensions available.","Create an empty <code>Extensions</code>.","Remove a type from this <code>Extensions</code>.","","","","","Creates a future that is immediately ready with a value.","","","","","","","","","Extract the inner value of this <code>Ready</code>.","","Creates a future that is immediately ready with a value.","","","","","","","Binary message.","A boxed stream that yields socket messages.","A boxed sink that accepts socket messages.","Close message.","Error used when socket halfs could not be combined.","Occurs if a message failed to decode.","Ping message.","Pong message.","Currently only occurs if a server sends an error to a …","Read half of a socket.","A hRPC socket.","Errors that can occur during a socket’s operation.","Generic socket message.","Text message.","Occurs if the underlying transport for this socket yields …","Write half of a socket.","","","","","","","","","","","","","Close the socket.","Close the socket.","Combine a write and read half back to a socket.","","","","","","","","","","","","","","","","","","","","Send a ping over the socket.","Send a ping over the socket.","Receive a message from the socket.","Receive a message from the socket.","Send an error over the socket.","Send an error over the socket.","Send a message over the socket.","Send a message over the socket.","","Split this socket into the write half and the read half.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Common code to work with the HTTP transport.","Common code to work with the mock transport.","Common code to work with tokio_tungstenite WebSockets.","Common code to work with ws_stream_wasm WebSockets.","The hRPC version header used in unary requests.","Helper methods for working with <code>HeaderMap</code>.","Create a header value for the hRPC content type.","Check if a header contains a string. Ignores casing for …","Check if a header is equal to a bytes array. Ignores …","Create a header name for the hRPC version header (see …","Create a header value with hRPC version, for the …","Create the spec compliant WS protocol with hRPC version.","Create the spec compliant WS protocol with hRPC version, …","A mock receiver.","A mock sender.","","","","","","","","","","","Create a new pair of mock channels.","","","","","","","","","","Wrapper over a <code>tokio_tungstenite::WebSocketStream</code> that …","","","","","Create a new web socket by wrapping a …","","","","","","","","","","","Type that wraps a <code>WsStream</code> and implements <code>Sink</code> and <code>Stream</code> …","","","","","Create a new websocket from a stream.","","","","","","","","","","","Errors that can occur while decoding the body of a …","An error occured while reading the body.","The body contained an invalid protobuf message.","","","","","","","","","","","","","","","Encodes a protobuf message into a new <code>BytesMut</code> buffer.","Encodes a protobuf message into the given <code>BytesMut</code> buffer.","Error type that will be returned by servers.","Represents a hRPC error identifier.","An error occured in server.","Specified endpoint was not found on server.","Error produced when trying to parse a string as a …","Endpoint was not implemented by server.","Reached resource quota or rate limited by server.","Information that can be used by clients for retrying …","The server could not be reached, most likely means the …","Return the string version of this hRPC identifier.","","","","","","","","","","","","","","","","","","","Compare this hRPC identifier with some string identifier …","","","Details about this message. This is dependent on the error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A human readable message in English, explaining why the …","The identifier of this error, can be used as an i18n key.","","","","","","","","","","","","","Create a new hRPC error representing an internal server …","Create a new hRPC error representing a not found error (…","Create a new hRPC error representing a not implemented …","Create a new hRPC error representing resource exhaustion …","","How many seconds to wait before retrying the request.","","","","","","","","","","","","","","","","","","","","","Set the “more details” of this hRPC error.","Set the “identifier” of this hRPC error.","Set the “human message” of this hRPC error.","A request that has a message type of <code>()</code>. Used in places …","Trait used for blanket impls on generated protobuf types.","Request parts.","A hRPC request.","Body of a request.","","","Create a request with an empty body.","Get an immutable reference to the endpoint of this …","Endpoint of a request.","Get a mutable reference to the endpoint of this response.","Get an immutable reference to the extensions of this …","Extensions of a request.","Get a mutable reference to the extensions of this response.","","","","","Extract the body from the request and decode it into the …","Convert this to a hRPC request.","Create a new request with the specified message.","Creates a new request using the provided body.","","","","","A response that has a message type of <code>()</code>. Used in places …","Trait used for converting any type to a Response type.","Response parts.","hRPC response type.","Body of a response.","","","Creates a response with an empty body.","Get an immutable reference to the extensions of this …","Extensions of a response.","Get a mutable reference to the extensions of this response.","","","","","Extract the body from the response and decode it into the …","Convert this to a hRPC response.","Create a new hRPC response.","Creates a response with the provided body.","","","","","Type that contains a <code>MakeRoutes</code> and implements …","Type that layers the handlers that are produced by a …","The core trait of <code>hrpc-rs</code> servers. This trait acts as a …","Type that contains two <code>MakeRoutes</code>s and stacks (combines) …","","","","","","","","","","","","","","Combines this server with another server.","Error types used by hRPC.","","","","","","","Turns this server into a type that implements <code>MakeService</code>, …","Layers this server with a layer.","Creates a <code>Routes</code>, which will be used to build a …","","","","Prelude that exports commonly used server types.","The router used by hRPC.","Handler type and handlers used by hRPC.","Socket used by hRPC for “streaming” RPCs.","","","","Transports for hRPC services.","","","","","","","","","","Other useful types, traits and functions used by hRPC.","","","","Shorthand type for `Result&lt;T, HrpcError&gt;.","An attribute macro that turns an <code>async fn</code> into a hRPC …","Builder type for inserting <code>HrpcService</code>s before building a …","Finalized <code>Routes</code>, ready for serving as a <code>Service</code>.","Set the service that will be used if no routes are matched.","","","","","Build the routes.","","Combine this with another <code>Routes</code>. Note that this cannot …","","","","","","Layer the routes that were added until this.","Set layer for the finalized router service.","Create a new <code>Routes</code>.","","Add a new route.","","","","","","","","","Layer type that produces <code>HrpcService</code>s.","Extension trait for <code>HrpcLayer</code>.","A hRPC handler.","","","","","","","","","","","","Convert this into a <code>HrpcLayer</code>.","Layer this handler.","","Create a new handler from a <code>tower::Service</code>.","Create a new <code>HrpcLayer</code> from a <code>tower::Layer</code>.","A handler that responses to any request with not found.","","","","","","","","","","","The type of the error returned by a transport if it fails.","Trait for enabling generic transport implementations over …","Server implementation for a HTTP transport.","The mock transport. Useful for testing.","Start serving a <code>MakeRoutes</code>.","A boxed HTTP body. This is used to unify response bodies.","A configuration for <code>Http</code>.","A HTTP request.","A HTTP response.","A transport based on <code>hyper</code> that supports TLS.","","","","","Convert a body with the correct attributes to a <code>BoxBody</code>.","Builds the config, creating an owned version of it.","","","Set new configuration for the <code>hyper</code> HTTP server.","Configure TLS for this server with paths to certificate …","","","","","Set whether HTTP/1 connections should support …","Enables or disables HTTP/1 keep-alive.","Sets whether HTTP1 is required.","Set whether HTTP/1 connections will write header names as …","Set whether HTTP/1 connections will write header names as …","Set whether HTTP/1 connections should try to use vectored …","Sets whether to use an adaptive flow control.","Sets the max connection-level flow control for HTTP2.","Sets the <code>SETTINGS_INITIAL_WINDOW_SIZE</code> option for HTTP2 …","Sets an interval for HTTP2 Ping frames should be sent to …","Sets a timeout for receiving an acknowledgement of the …","Sets the <code>SETTINGS_MAX_CONCURRENT_STREAMS</code> option for HTTP2 …","Sets the maximum frame size to use for HTTP2.","Sets whether HTTP2 is required.","","","Useful layers for HTTP.","Layer this <code>hyper</code> server with a <code>Layer</code>.","Set the maximum buffer size for the connection.","Create a new <code>hyper</code> transport.","Creates a default <code>Http</code> config.","Aggregates flushes to better support pipelined responses.","","","","","","","","","Utilities for working with this transport.","","","Service to set response status from possible errors.","Future for <code>ErrorIdentifierToStatus</code>.","Layer for layering services with <code>ErrorIdentifierToStatus</code>.","Type alias for a function that converts an error …","","","","","","","","","","","","","","","","","","","","Create a new layer using the provided <code>ToStatus</code> function.","Create a new service by wrapping another service, and …","","","","","","","","","","","","","","","","","","A service that wraps a <code>HrpcService</code>, and takes HTTP …","Layer that can be used to transform a <code>HrpcService</code> to …","A type alias for a boxed <code>Service</code> that takes <code>HttpRequest</code>s …","Service that wraps an <code>IntoMakeService</code> and transforms the …","","","","","","","","","","","","","","","","Layer the inner layer, that will be used to transform the …","","Create a new service by wrapping a <code>HrpcService</code>.","Create a new service by wrapping an <code>IntoMakeService</code>.","","","","","","","","","","","","","","","","Mock transport for the server.","","","","","Create a new mock transport.","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,1,2,0,0,0,0,0,0,0,1,2,1,1,2,2,2,3,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,0,1,2,1,2,0,0,0,0,0,1,2,1,2,1,2,1,2,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,0,5,5,5,5,0,5,5,0,5,0,5,5,5,5,0,0,6,6,6,0,6,6,6,7,6,7,7,7,6,6,7,7,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,7,7,7,7,7,6,7,6,7,6,7,6,7,6,7,6,7,8,9,10,10,0,0,0,0,0,11,12,13,11,12,13,12,11,12,11,12,11,12,13,11,12,13,13,11,11,12,11,11,13,12,11,12,11,12,13,11,12,13,13,11,12,13,11,12,13,0,14,15,16,14,0,0,0,15,16,14,15,16,14,15,16,0,15,15,15,16,14,14,14,14,15,16,0,14,15,16,0,15,15,14,15,16,14,15,16,14,15,16,14,15,16,17,18,19,20,21,22,22,23,0,23,23,23,23,23,0,23,23,23,23,23,23,0,24,24,0,0,0,0,25,24,0,24,25,26,27,24,25,26,27,24,25,27,27,27,27,24,24,25,25,26,27,24,24,25,0,26,27,24,25,26,27,27,26,27,24,25,27,24,25,26,27,24,25,26,27,24,25,26,26,27,24,25,26,27,24,25,28,29,30,31,32,33,33,33,33,0,0,0,34,35,33,34,35,33,35,35,35,35,35,33,33,34,35,33,34,35,33,34,35,35,35,33,34,35,33,34,35,33,34,35,33,34,35,33,36,37,38,39,0,0,0,40,40,41,42,40,41,42,40,42,42,42,40,40,41,42,40,41,42,40,41,42,41,42,42,40,41,42,40,41,42,40,41,41,42,40,41,42,40,43,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,45,0,45,45,45,45,45,45,46,0,0,46,0,47,46,46,47,0,0,0,0,46,47,0,48,49,50,46,47,51,48,49,50,46,47,51,48,50,48,46,47,47,51,51,48,49,50,46,46,46,47,51,48,49,50,46,47,51,48,50,48,49,48,50,48,50,47,48,47,51,48,49,50,46,47,51,48,49,50,46,47,51,48,49,50,46,47,51,48,49,50,46,47,51,52,53,54,55,56,57,58,0,0,0,0,0,0,0,59,59,0,0,0,0,0,0,60,61,60,61,61,61,60,61,60,61,0,61,60,61,60,61,60,61,60,61,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,66,0,0,0,0,67,67,0,67,67,0,67,67,67,68,69,67,70,68,69,67,70,68,69,68,69,67,68,69,67,67,67,68,69,68,68,69,68,69,68,69,67,67,68,68,69,67,70,68,68,68,68,68,68,68,68,68,69,67,70,67,67,68,68,68,69,67,70,68,69,68,69,68,69,68,69,68,68,68,68,67,69,68,69,67,68,68,69,67,70,68,69,67,70,68,69,67,70,68,69,67,70,68,68,68,0,0,0,0,71,71,71,1,1,71,1,1,71,1,71,71,71,71,1,72,1,1,71,71,71,71,0,0,0,0,73,73,73,2,2,73,2,73,73,73,73,2,74,2,2,73,73,73,73,0,0,0,0,75,76,77,75,76,77,77,75,76,77,75,76,77,78,0,75,76,77,75,76,77,78,78,78,75,76,77,0,0,0,0,75,76,77,0,75,76,77,75,76,77,75,76,77,0,75,76,77,0,0,0,0,79,79,80,79,80,79,80,79,79,79,80,79,80,79,79,79,80,79,79,80,79,80,79,80,79,80,0,0,0,81,82,81,82,81,82,82,81,82,81,82,83,81,82,81,82,0,81,82,81,82,81,82,81,82,81,82,84,0,0,0,84,0,0,0,0,0,85,86,85,86,0,86,86,86,85,85,86,86,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,85,86,0,85,86,85,86,86,85,86,85,86,85,86,85,86,0,85,86,0,0,0,0,87,88,89,87,88,89,88,87,88,87,88,87,88,89,87,88,89,89,87,87,88,89,88,87,88,87,88,89,87,88,89,89,87,88,89,87,88,89,0,0,0,0,90,91,92,90,91,92,90,92,90,91,92,90,91,92,91,92,92,90,92,90,92,92,90,91,92,90,91,92,90,91,92,90,91,92,0,93,93,93,93,93,93,93,93,93,93],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["boxerror",6]],null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["parts",3]]],[[["parts",3]]],[[]],[[["error",3]]],[[["error",3]]],[[],["headermap",3]],[[],["headermap",3]],[[],["extensions",3]],[[],["extensions",3]],[[],[["headermap",3],["option",4,["headermap"]]]],[[],[["headermap",3],["option",4,["headermap"]]]],[[],[["headermap",3],["option",4,["headermap"]]]],[[],[["headermap",3],["option",4,["headermap"]]]],[[],[["option",4,["extensions"]],["extensions",3]]],[[],[["option",4,["extensions"]],["extensions",3]]],[[],[["option",4,["extensions"]],["extensions",3]]],[[],[["option",4,["extensions"]],["extensions",3]]],[[],[["method",3],["option",4,["method"]]]],[[],[["uri",3],["option",4,["uri"]]]],[[],[["option",4,["version"]],["version",3]]],null,[[]],[[]],[[],["request",3]],[[],["response",3]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[["body",3]]],[[]],[[]],[[]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4,["option"]]]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[["request",3]]],[[["request",3]]],null,[[["request",3]]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["client",3]],[[],["client",3]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[],["str",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["transporterror",4]]],[[["decodebodyerror",4]]],[[["error",3]],["error",3]],[[["error",3]],["error",3]],[[["elapsed",3]],["error",3]],[[["joinerror",3]],["error",3]],[[["encodeerror",3]],["error",3]],[[]],[[["decodeerror",3]],["error",3]],[[["intoinnererror",3]],["error",3]],[[["nulerror",3]],["error",3]],[[["errorkind",4]],["error",3]],[[["error",3]],["error",3]],[[["error",3]],["error",3]],[[["i32",15]],["error",3]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],[["box",3,["error","global"]],["option",4,["box"]]]],[[],[["option",4,["error"]],["error",3]]],[[],["errorkind",4]],[[],["error",3]],[[["errorkind",4]],["error",3]],[[],[["i32",15],["option",4,["i32"]]]],[[],[["option",4,["stderror"]],["stderror",8]]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["transportrequest",4]]],[[],["modifylayer",3]],[[],["modify",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modifyreq",6],["modifyresp",6]]],[[["modifyreq",6],["modifyresp",6]]],[[["modifyreq",6]]],[[["modifyresp",6]]],[[["pin",3],["context",3]],["poll",4]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["boxresponse",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["clienterror",4]]],[[["hypererror",4]]],[[["wasmerror",4]]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,[[["boxedsocketrx",6],["boxedsockettx",6]]],[[["boxresponse",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transportrequest",4]]],[[],["hyper",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[]],[[]],[[["builder",3]],["httpclient",6]],[[]],[[]],[[]],[[]],[[]],[[["uri",3]],[["hypererror",4],["result",4,["hypererror"]]]],[[["uri",3],["httpclient",6]],[["hypererror",4],["result",4,["hypererror"]]]],[[["pin",3],["context",3]],["poll",4]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[],[["option",4,["stderror"]],["stderror",8]]],[[],[["option",4,["stderror"]],["stderror",8]]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["transportrequest",4]]],[[["bool",15]]],[[],["wasm",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["uri",3]],[["result",4,["wasmerror"]],["wasmerror",4]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["transportrequest",4]]],[[],["mock",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mocksender",3]]],[[["context",3],["pin",3]],["poll",4]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["extensions",3]],[[["formatter",3]],["result",6]],[[]],[[],["option",4]],[[],["option",4]],[[["send",8]],[["option",4],["send",8]]],[[]],[[],["bool",15]],[[],["usize",15]],[[],["extensions",3]],[[],[["option",4],["send",8]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["ready",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["option",4]],[[["pin",3],["context",3]],["poll",4]],[[],["ready",3]],[[]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["writesocket",3],["readsocket",3]],[["combineerror",3],["result",4,["combineerror"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["wsmessage",4]]],[[["wsmessage",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hrpcerror",3]]],[[["hrpcerror",3]]],[[]],[[]],[[],[["option",4,["stderror"]],["stderror",8]]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["headervalue",3]],[[["headername",3],["str",15]],["bool",15]],[[["headername",3]],["bool",15]],[[],["headername",3]],[[],["headervalue",3]],[[],["string",3]],[[],["headervalue",3]],null,null,[[]],[[]],[[]],[[]],[[],["mocksender",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["websocketstream",3]]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3]],[["option",4],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4]]],[[["socketmessage",4],["pin",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[["wsstream",3]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["pin",3],["context",3]],[["poll",4,["result"]],["result",4]]],[[["pin",3],["socketmessage",4]],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["option",4,["stderror"]],["stderror",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["bytesmut",3]],[[["bytesmut",3]]],null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",3]],[[],["retryinfo",3]],[[],["hrpcerroridentifier",4]],[[]],[[]],[[]],[[["hrpcerroridentifier",4]],["ordering",4]],[[],["bool",15]],[[]],[[]],null,[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["error",3]],["bool",15]],[[["retryinfo",3]],["bool",15]],[[["hrpcerroridentifier",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["socketerror",4]]],[[]],[[]],[[["decodebodyerror",4]]],[[["str",15]]],[[]],[[["string",3]]],[[]],[[["boxerror",6]]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["response",3]],[[],["response",3]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["error",3]],["bool",15]],[[["retryinfo",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["hrpcerroridentifier",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[],["request",3]],[[],["str",15]],null,[[],["cow",4]],[[],["extensions",3]],null,[[],["extensions",3]],[[["formatter",3]],["result",6]],[[]],[[["request",3]]],[[]],[[]],[[],["request",3]],[[]],[[["body",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[],["extensions",3]],null,[[],["extensions",3]],[[["formatter",3]],["result",6]],[[["response",3]]],[[]],[[]],[[]],[[],["response",3]],[[],["response",3]],[[["body",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["servicestack",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["intomakeservice",3]],[[],["layeredservice",3]],[[],["routes",3]],[[],["routes",3]],[[],["routes",3]],[[["context",3]],[["poll",4,["result"]],["result",4]]],null,null,null,null,[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["routesfinalized",3]],[[["boxrequest",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[["boxrequest",6]]],[[],["hrpclayer",3]],[[]],[[]],[[]],[[]],[[]],[[],["hrpclayer",3]],[[]],[[]],[[]],[[]],[[],["hrpcservice",3]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[],[["boxfuture",6,["result"]],["result",4]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["boxbody",6]],[[],["httpconfig",3]],[[],["httpconfig",3]],[[]],[[["httpconfig",3]]],[[]],[[],["httpconfig",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["bool",15]],["httpconfig",3]],[[["bool",15]],["httpconfig",3]],[[["bool",15]],["httpconfig",3]],[[["bool",15]],["httpconfig",3]],[[["bool",15]],["httpconfig",3]],[[["bool",15]],["httpconfig",3]],[[["bool",15]],["httpconfig",3]],[[],["httpconfig",3]],[[],["httpconfig",3]],[[],["httpconfig",3]],[[["duration",3]],["httpconfig",3]],[[],["httpconfig",3]],[[],["httpconfig",3]],[[["bool",15]],["httpconfig",3]],[[]],[[]],null,[[],[["stack",3],["hyper",3,["stack"]]]],[[["usize",15]],["httpconfig",3]],[[["tosocketaddrs",8]],[["result",4,["error"]],["error",3]]],[[],["httpconfig",3]],[[["bool",15]],["httpconfig",3]],[[],[["boxfuture",6,["result"]],["result",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["boxrequest",6]]],[[],["erroridentifiertostatuslayer",3]],[[],["erroridentifiertostatus",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tostatus",6]]],[[["tostatus",6]]],[[["pin",3],["context",3]],["poll",4]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["context",3],["pin",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["httprequest",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hrpcservice",3]]],[[],[["stack",3],["makeroutestohttp",3,["stack"]]]],[[]],[[["hrpcservice",3]]],[[["intomakeservice",3]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[["context",3]],[["poll",4,["result"]],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["mockreceiver",3]]],[[],[["boxfuture",6,["result"]],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Request"],[3,"Response"],[6,"BoxResponse"],[3,"Body"],[3,"Client"],[4,"ClientError"],[3,"IoError"],[13,"MessageDecode"],[13,"Transport"],[13,"EndpointError"],[3,"ModifyLayer"],[3,"Modify"],[3,"ModifyFuture"],[4,"TransportError"],[4,"TransportResponse"],[4,"TransportRequest"],[13,"Transport"],[13,"GenericClient"],[13,"Unary"],[13,"Socket"],[13,"Unary"],[13,"Socket"],[4,"InvalidServerUrl"],[4,"HyperError"],[4,"SocketInitError"],[3,"HyperCallFuture"],[3,"Hyper"],[13,"FailedRequestBuilder"],[13,"Http"],[13,"InvalidUrl"],[13,"SocketInitError"],[13,"Tungstenite"],[4,"WasmError"],[3,"SocketProtocols"],[3,"Wasm"],[13,"InvalidServerUrl"],[13,"HttpError"],[13,"BodyError"],[13,"SocketInitError"],[4,"MockError"],[3,"MockCallFuture"],[3,"Mock"],[13,"Send"],[3,"Extensions"],[3,"Ready"],[4,"SocketMessage"],[4,"SocketError"],[3,"Socket"],[3,"ReadSocket"],[3,"WriteSocket"],[3,"CombineError"],[13,"Protocol"],[13,"MessageDecode"],[13,"Transport"],[13,"Binary"],[13,"Text"],[13,"Ping"],[13,"Pong"],[8,"HeaderMapExt"],[3,"MockReceiver"],[3,"MockSender"],[3,"WebSocket"],[3,"WebSocket"],[4,"DecodeBodyError"],[13,"InvalidProtoMessage"],[13,"InvalidBody"],[4,"HrpcErrorIdentifier"],[3,"Error"],[3,"RetryInfo"],[3,"NotHrpcErrorIdentifier"],[3,"Parts"],[8,"IntoRequest"],[3,"Parts"],[8,"IntoResponse"],[3,"LayeredService"],[3,"ServiceStack"],[3,"IntoMakeService"],[8,"MakeRoutes"],[3,"Routes"],[3,"RoutesFinalized"],[3,"HrpcService"],[3,"HrpcLayer"],[8,"HrpcLayerExt"],[8,"Transport"],[3,"Hyper"],[3,"HttpConfig"],[3,"ErrorIdentifierToStatusLayer"],[3,"ErrorIdentifierToStatus"],[3,"ErrorIdentifierToStatusFuture"],[3,"HrpcServiceToHttp"],[3,"HrpcServiceToHttpLayer"],[3,"MakeRoutesToHttp"],[3,"Mock"]]},\
"hrpc_build":{"doc":"Code generation for <code>hrpc</code>.","t":[3,16,16,8,16,8,11,11,11,11,0,10,11,11,10,10,11,5,11,5,11,11,5,11,11,11,10,10,11,10,10,10,10,11,10,11,10,0,10,11,11,11,11,11,11,5,5],"n":["Builder","Comment","Comment","Method","Method","Service","borrow","borrow_mut","build_client","build_server","client","client_streaming","clone","clone_into","comment","comment","compile","compile_protos","compile_with_config","configure","extern_path","field_attribute","fmt","fmt","format","from","identifier","identifier","into","methods","name","name","options","out_dir","package","proto_path","request_response_name","server","server_streaming","to_owned","try_from","try_into","type_attribute","type_id","vzip","generate","generate"],"q":["hrpc_build","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc_build::client","hrpc_build::server"],"d":["Service generator builder.","Comment type.","Comment type.","Method generation trait.","Method type.","Service generation trait.","","","Enable or disable hRPC client code generation.","Enable or disable hRPC server code generation.","Service code generation for client","Method is streamed by client.","","","Get comments about this item.","Get comments about this item.","Compile the .proto files and execute code generation.","Simple <code>.proto</code> compiling. Use <code>configure</code> instead if you need …","Compile the .proto files and execute code generation using …","Configure <code>hrpc-build</code> code generation.","Declare externally provided Protobuf package or type.","Add additional attribute to matched messages, enums, and …","Format files under the out_dir with rustfmt","","Enable the output to be formated by rustfmt.","","Identifier used to generate type name.","Identifier used to generate type name.","","Methods provided by service.","Name of service.","Name of method.","Get options of this item.","Set the output directory to generate code to.","Package name of service.","Set the path to where tonic will search for the …","Type name of request and response.","Service code generation for server","Method is streamed by server.","","","","Add additional attribute to matched messages, enums, and …","","","Generate service for client.","Generate service for Server."],"i":[0,1,2,0,1,0,3,3,3,3,0,2,3,3,1,2,3,0,3,0,3,3,0,3,3,3,1,2,3,1,1,2,2,3,1,3,2,0,2,3,3,3,3,3,3,0,0],"f":[null,null,null,null,null,null,[[]],[[]],[[["bool",15]]],[[["bool",15]]],null,[[],["bool",15]],[[],["builder",3]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[["config",3]],["result",6]],[[],["builder",3]],[[]],[[["asref",8,["str"]],["str",15]]],[[["str",15]]],[[["formatter",3]],["result",6]],[[["bool",15]]],[[]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["vec",3]],[[]],[[],["str",15]],[[]],[[["str",15]]],null,[[],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[["asref",8,["str"]],["str",15]]],[[],["typeid",3]],[[]],[[["str",15]],["tokenstream",3]],[[["str",15]],["tokenstream",3]]],"p":[[8,"Service"],[8,"Method"],[3,"Builder"]]},\
"hrpc_proc_macro":{"doc":"Utility proc macros for <code>hrpc</code>.","t":[23],"n":["handler"],"q":["hrpc_proc_macro"],"d":["An attribute macro that turns an <code>async fn</code> into a hRPC …"],"i":[0],"f":[null],"p":[]},\
"interop":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,0,11,11,11,0,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,12,11,11,11,11,11],"n":["MuService","Ping","Pong","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","client","clone","clone","clone_into","clone_into","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_response","into_response","main","merge_field","merge_field","mu","mu","mu","mu_client","mu_middleware","mu_mu","mu_mute","mu_server","ne","ne","server","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MuClient","borrow","borrow_mut","clone","clone_into","fmt","from","inner","into","mu","mu_mu","mu_mute","new","new_inner","new_transport","to_owned","try_from","try_into","type_id","vzip","Mu","MuServer","borrow","borrow_mut","clone","clone_into","from","into","make_routes","mu","mu_middleware","mu_mu","mu_mu_middleware","mu_mute","mu_mute_middleware","new","serve","service","to_owned","try_from","try_into","type_id","vzip"],"q":["interop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interop::mu_client","","","","","","","","","","","","","","","","","","","","interop::mu_server","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Ping message.","Pong message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","Mu RPC.","MuMu RPC. ``` test ```","MuMute RPC.","Create a new client using HTTP transport.","Create a new client using the provided generic client.","Create a new client using the provided transport.","","","","","","Generated trait containing hRPC methods that should be …","","","","","","","","","Mu RPC.","Optional middleware for this RPC.","MuMu RPC. ``` test ```","Optional middleware for this RPC.","MuMute RPC.","Optional middleware for this RPC.","Create a new service server.","Serves the service with HTTP transport.","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,2,3,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,1,2,3,1,2,3,2,3,2,3,0,2,3,1,2,3,0,1,1,1,0,2,3,0,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,5,5,5,5,5,5,5,6,6,6,6,6,6,5,5,5,5,5,5,5,5],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ping",3]],[[],["pong",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["ping",3]],["bool",15]],[[["pong",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["response",3]],[[],["response",3]],[[]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["request",3,["ping"]],["ping",3]],[["boxfuture",6,["serverresult"]],["serverresult",6,["response"]]]],null,null,null,[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[["request",3],["pong",3],["ping",3],["socket",3,["pong","ping"]]],[["boxfuture",6,["serverresult"]],["serverresult",6]]],[[["request",3],["pong",3],["ping",3],["socket",3,["pong","ping"]]],[["boxfuture",6,["serverresult"]],["serverresult",6]]],null,[[["ping",3]],["bool",15]],[[["pong",3]],["bool",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[],["muclient",3]],[[]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[]],[[]],[[]],[[],[["clientresult",6,["hypererror"]],["hypererror",4]]],[[["client",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["routes",3]],[[["hrpcrequest",3,["ping"]],["ping",3]],[["boxfuture",6,["serverresult"]],["serverresult",6,["hrpcresponse"]]]],[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[["socket",3,["pong","ping"]],["pong",3],["hrpcrequest",3],["ping",3]],[["serverresult",6],["boxfuture",6,["serverresult"]]]],[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[["socket",3,["pong","ping"]],["pong",3],["hrpcrequest",3],["ping",3]],[["serverresult",6],["boxfuture",6,["serverresult"]]]],[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[]],[[["tosocketaddrs",8]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"MuService"],[3,"Ping"],[3,"Pong"],[3,"MuClient"],[3,"MuServer"],[8,"Mu"]]},\
"mock":{"doc":"","t":[6,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,3,11,11,11,11,11,11,11,11,11],"n":["BoxError","hello","server","WelcomeUserRequest","WelcomeUserResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","greeter_client","greeter_server","into","into","into_request","into_request","into_response","into_response","merge_field","merge_field","ne","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_name","vzip","vzip","welcome_message","GreeterClient","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","new_inner","new_transport","to_owned","try_from","try_into","type_id","vzip","welcome_user","Greeter","GreeterServer","borrow","borrow_mut","clone","clone_into","from","into","make_routes","new","serve","to_owned","try_from","try_into","type_id","vzip","welcome_user","welcome_user_middleware","GreeterService","borrow","borrow_mut","from","into","try_from","try_into","type_id","vzip","welcome_user"],"q":["mock","","","mock::hello","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mock::hello::greeter_client","","","","","","","","","","","","","","","","","mock::hello::greeter_server","","","","","","","","","","","","","","","","","","mock::server","","","","","","","","",""],"d":["A boxed error.","<code>hello</code> package protobuf definitions and service.","Server implementation.","Request used in <code>WelcomeUser</code> endpoint.","Response used in <code>WelcomeUser</code> endpoint.","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","The user name of the user you want to welcome.","","","The welcome message.","The greeter service.","","","","","","","","Create a new client using HTTP transport.","Create a new client using the provided generic client.","Create a new client using the provided transport.","","","","","","Endpoint to welcome a user.","Generated trait containing hRPC methods that should be …","The greeter service.","","","","","","","","Create a new service server.","Serves the service with HTTP transport.","","","","","","Endpoint to welcome a user.","Optional middleware for this RPC.","","","","","","","","","",""],"i":[0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,0,6,6,6,6,6,6,6,6,6],"f":[null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["welcomeuserrequest",3]],[[],["welcomeuserresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["welcomeuserrequest",3]],["bool",15]],[[["welcomeuserresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["response",3]],[[],["response",3]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["welcomeuserrequest",3]],["bool",15]],[[["welcomeuserresponse",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,[[]],[[]],[[],["greeterclient",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["clientresult",6,["hypererror"]],["hypererror",4]]],[[["client",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["routes",3]],[[]],[[["tosocketaddrs",8]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["hrpcrequest",3,["welcomeuserrequest"]],["welcomeuserrequest",3]],[["boxfuture",6,["serverresult"]],["serverresult",6,["hrpcresponse"]]]],[[],[["option",4,["hrpclayer"]],["hrpclayer",3]]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["welcomeuserrequest",3],["request",3,["welcomeuserrequest"]]],[["boxfuture",6,["serverresult"]],["serverresult",6,["response"]]]]],"p":[[3,"WelcomeUserRequest"],[3,"WelcomeUserResponse"],[3,"GreeterClient"],[3,"GreeterServer"],[8,"Greeter"],[3,"GreeterService"]]},\
"server":{"doc":"","t":[3,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["GreeterService","borrow","borrow_mut","clone","clone_into","from","into","into_response","main","to_owned","try_from","try_into","type_id","vzip","welcome_user"],"q":["server","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["greeterservice",3]],[[]],[[]],[[]],[[],["response",3]],[[],[["result",4,["boxerror"]],["boxerror",6]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["welcomeuserrequest",3],["request",3,["welcomeuserrequest"]]],[["serverresult",6,["response"]],["boxfuture",6,["serverresult"]]]]],"p":[[3,"GreeterService"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};