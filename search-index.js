var searchIndex = JSON.parse('{\
"chat":{"doc":"","t":[6,0,3,3,11,11,11,11,0,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11],"n":["BoxError","chat","Empty","Message","borrow","borrow","borrow_mut","borrow_mut","chat_client","chat_server","clear","clear","clone","clone","clone_into","clone_into","content","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","into_response","into_response","merge_field","merge_field","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ChatClient","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","new_inner","new_transport","send_message","stream_messages","to_owned","try_from","try_into","type_id","vzip","Chat","ChatServer","borrow","borrow_mut","clone","clone_into","from","into","make_routes","new","send_message","send_message_middleware","serve","stream_messages","stream_messages_middleware","to_owned","try_from","try_into","type_id","vzip"],"q":["chat","","chat::chat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","chat::chat::chat_client","","","","","","","","","","","","","","","","","","chat::chat::chat_server","","","","","","","","","","","","","","","","","","",""],"d":["A boxed error.","<code>chat</code> package protobuf definitions and service.","An empty message.","A chat message.","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chat service.","","","","","","","","Create a new client using HTTP transport.","Create a new client using the provided generic client.","Create a new client using the provided transport.","Endpoint to send a chat message.","Endpoint to stream chat messages.","","","","","","Generated trait containing hRPC methods that should be …","Chat service.","","","","","","","","Create a new service server.","Endpoint to send a chat message.","Optional middleware for this RPC.","Serves the service with HTTP transport.","Endpoint to stream chat messages.","Optional middleware for this RPC.","","","","",""],"i":[0,0,0,0,1,2,1,2,0,0,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,5,5,4,5,5,4,4,4,4,4],"f":[null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["message",3]],[[],["empty",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["message",3]],["bool",15]],[[["empty",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["response",3]],[[],["response",3]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["message",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[],["chatclient",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["clientresult",6]],[[["client",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["routes",3]],[[]],[[["hrpcrequest",3,["message"]],["message",3]],[["boxfuture",6,["serverresult"]],["serverresult",6,["hrpcresponse"]]]],[[["str",15]],[["hrpclayer",3],["option",4,["hrpclayer"]]]],[[["tosocketaddrs",8]]],[[["socket",3,["message","empty"]],["empty",3],["hrpcrequest",3],["message",3]],[["boxfuture",6,["serverresult"]],["serverresult",6]]],[[["str",15]],[["hrpclayer",3],["option",4,["hrpclayer"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Message"],[3,"Empty"],[3,"ChatClient"],[3,"ChatServer"],[8,"Chat"]]},\
"client":{"doc":"","t":[5],"n":["main"],"q":["client"],"d":[""],"i":[0],"f":[[[],[["result",4,["boxerror"]],["boxerror",6]]]],"p":[]},\
"hello_world":{"doc":"","t":[6,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11],"n":["BoxError","hello","WelcomeUserRequest","WelcomeUserResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","greeter_client","greeter_server","into","into","into_request","into_request","into_response","into_response","merge_field","merge_field","ne","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_name","vzip","vzip","welcome_message","GreeterClient","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","new_inner","new_transport","to_owned","try_from","try_into","type_id","vzip","welcome_user","Greeter","GreeterServer","borrow","borrow_mut","clone","clone_into","from","into","make_routes","new","serve","to_owned","try_from","try_into","type_id","vzip","welcome_user","welcome_user_middleware"],"q":["hello_world","","hello_world::hello","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hello_world::hello::greeter_client","","","","","","","","","","","","","","","","","hello_world::hello::greeter_server","","","","","","","","","","","","","","","","",""],"d":["A boxed error.","<code>hello</code> package protobuf definitions and service.","Request used in <code>WelcomeUser</code> endpoint.","Response used in <code>WelcomeUser</code> endpoint.","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","The user name of the user you want to welcome.","","","The welcome message.","The greeter service.","","","","","","","","Create a new client using HTTP transport.","Create a new client using the provided generic client.","Create a new client using the provided transport.","","","","","","Endpoint to welcome a user.","Generated trait containing hRPC methods that should be …","The greeter service.","","","","","","","","Create a new service server.","Serves the service with HTTP transport.","","","","","","Endpoint to welcome a user.","Optional middleware for this RPC."],"i":[0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["welcomeuserrequest",3]],[[],["welcomeuserresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["welcomeuserrequest",3]],["bool",15]],[[["welcomeuserresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["response",3]],[[],["response",3]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["decodecontext",3],["u32",15],["wiretype",4]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["welcomeuserrequest",3]],["bool",15]],[[["welcomeuserresponse",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,[[]],[[]],[[],["greeterclient",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["clientresult",6]],[[["client",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["routes",3]],[[]],[[["tosocketaddrs",8]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["hrpcrequest",3,["welcomeuserrequest"]],["welcomeuserrequest",3]],[["boxfuture",6,["serverresult"]],["serverresult",6,["hrpcresponse"]]]],[[["str",15]],[["option",4,["hrpclayer"]],["hrpclayer",3]]]],"p":[[3,"WelcomeUserRequest"],[3,"WelcomeUserResponse"],[3,"GreeterClient"],[3,"GreeterServer"],[8,"Greeter"]]},\
"hrpc":{"doc":"Common code used in hRPC code generation.","t":[6,17,3,3,14,14,0,11,11,11,11,0,14,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,14,0,0,0,0,11,11,11,11,11,11,11,11,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,0,11,11,11,11,4,6,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,10,10,0,13,13,6,3,4,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,13,13,13,13,3,4,13,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,6,8,6,3,6,3,3,11,11,11,11,11,11,5,12,12,11,11,11,11,11,10,10,12,12,5,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,3,4,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,8,3,3,12,11,11,11,11,12,11,11,12,11,11,11,11,11,10,11,11,11,11,11,11,6,8,3,3,12,11,11,11,11,12,11,11,11,11,11,10,11,11,11,11,11,11,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,10,11,11,11,0,0,0,0,11,11,11,0,11,11,11,11,11,11,11,11,11,0,11,11,11,6,3,23,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,3,16,8,0,10,3,11,11,11,11,11,11,11,11,11,0,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BoxError","HRPC_HEADER","Request","Response","bail","bail_result","body","borrow","borrow","borrow_mut","borrow_mut","client","combine_services","common","decode","encode","exports","fmt","fmt","from","from","from","from","from","from","from","from_unary_request","header_map","header_map","header_map_mut","header_map_mut","http_extensions","http_extensions","http_extensions_mut","http_extensions_mut","include_proto","into","into","into_request","into_response","make_handler","proto","request","response","server","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Body","BodyResult","aggregate","borrow","borrow_mut","empty","fmt","from","from","full","into","new","poll_data","poll_next","poll_trailers","try_from","try_into","try_poll_next","type_id","vzip","Client","borrow","borrow_mut","clone","clone_into","connect_socket","connect_socket_req","error","execute_request","fmt","from","into","modify_request_preflight_with","new","socket","to_owned","transport","try_from","try_into","type_id","vzip","ClientError","ClientResult","ContentNotSupported","EndpointError","Io","IoError","MessageDecode","Transport","borrow","borrow","borrow_mut","borrow_mut","cause","description","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_os_error","get_mut","get_ref","into","into","into_inner","into_non_blocking","kind","last_os_error","new","raw_os_error","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","endpoint","hrpc_error","Socket","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","is_closed","receive_message","send_message","spawn_process_task","spawn_task","to_owned","try_from","try_into","type_id","vzip","Error","Transport","call_socket","call_unary","http","FailedRequestBuilder","Http","HttpClient","Hyper","HyperError","InvalidScheme","InvalidUrl","InvalidUrlKind","SocketInitError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_socket","call_unary","clone","clone_into","fmt","fmt","fmt","fmt","fmt","from","from","from","from","http_client","into","into","into","new","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","extensions","fut","socket","transport","Extensions","borrow","borrow_mut","clear","contains","default","fmt","from","get","get_mut","insert","into","is_empty","len","new","remove","try_from","try_into","type_id","vzip","Ready","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_future","into_inner","poll","ready","to_owned","try_from","try_into","try_poll","type_id","vzip","Binary","Close","Ping","Pong","Socket","SocketMessage","Text","borrow","borrow_mut","fmt","from","from","into","try_from","try_into","type_id","vzip","0","0","0","0","http","BoxBody","HeaderMapExt","HttpRequest","HttpRequestParts","HttpResponse","HttpResponseParts","WebSocket","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","box_body","extensions","extensions","fmt","fmt","from","from","from","header_contains_str","header_eq","headers","headers","hrpc_header_value","into","into","into","method","new","poll_close","poll_flush","poll_next","poll_ready","start_send","status","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","uri","version","version","vzip","vzip","vzip","DecodeBodyError","InvalidBody","InvalidProtoMessage","borrow","borrow_mut","fmt","fmt","from","into","source","to_string","try_from","try_into","type_id","vzip","0","0","encode_protobuf_message","encode_protobuf_message_to","Error","HrpcErrorIdentifier","InternalServerError","NotFound","NotHrpcErrorIdentifier","NotImplemented","ResourceExhausted","Unavailable","as_id","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","encode_raw","encoded_len","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_str","hash","human_message","identifier","into","into","into","into_request","into_response","merge_field","more_details","ne","new_internal_server_error","new_not_found","new_not_implemented","new_resource_exhausted","partial_cmp","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_details","with_identifier","with_message","BoxRequest","IntoRequest","Parts","Request","body","borrow","borrow_mut","empty","endpoint","endpoint","endpoint_mut","extensions","extensions","extensions_mut","from","from","into","into_message","into_request","new","new_with_body","try_from","try_into","type_id","vzip","BoxResponse","IntoResponse","Parts","Response","body","borrow","borrow_mut","empty","extensions","extensions","extensions_mut","from","from","into","into_message","into_response","new","new_with_body","try_from","try_into","type_id","vzip","IntoMakeService","LayeredService","MakeRoutes","ServiceStack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone","clone_into","clone_into","clone_into","combine_with","error","from","from","from","into","into","into","into_make_service","layer","make_routes","make_routes","make_routes","poll_ready","prelude","router","service","socket","to_owned","to_owned","to_owned","transport","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utils","vzip","vzip","vzip","ServerResult","Socket","handler","Routes","RoutesFinalized","any","borrow","borrow","borrow_mut","borrow_mut","build","call","combine_with","default","from","from","into","into","layer","layer_all","new","poll_ready","route","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","HrpcLayer","HrpcService","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","from","from","into","into","layer","layer","new","new","not_found","poll_ready","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Socket","Error","Transport","http","serve","Hyper","borrow","borrow_mut","from","into","new","serve","try_from","try_into","type_id","utils","vzip","HrpcServiceToHttp","HrpcServiceToHttpLayer","MakeRoutesToHttp","MakeRoutesToHttpLayer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","from","from","from","from","into","into","into","into","layer","layer","new","new","poll_ready","poll_ready","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["hrpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::body","","","","","","","","","","","","","","","","","","","","hrpc::client","","","","","","","","","","","","","","","","","","","","","hrpc::client::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::client::error::ClientError","","","","","","hrpc::client::socket","","","","","","","","","","","","","","","","","","","hrpc::client::transport","","","","","hrpc::client::transport::http","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::client::transport::http::HyperError","","","","hrpc::common","","","","hrpc::common::extensions","","","","","","","","","","","","","","","","","","","","hrpc::common::fut","","","","","","","","","","","","","","","","","","hrpc::common::socket","","","","","","","","","","","","","","","","","hrpc::common::socket::SocketMessage","","","","hrpc::common::transport","hrpc::common::transport::http","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::decode","","","","","","","","","","","","","","","hrpc::decode::DecodeBodyError","","hrpc::encode","","hrpc::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::request","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::response","","","","","","","","","","","","","","","","","","","","","","hrpc::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::error","hrpc::server::prelude","","hrpc::server::router","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::service","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::socket","hrpc::server::transport","","","","hrpc::server::transport::http","","","","","","","","","","","","hrpc::server::transport::http::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Alias for a type-erased error type.","The hRPC protobuf mimetype.","A hRPC request.","hRPC response type.","Bails with an error.","Takes a <code>Result</code>, returns the error if it’s <code>Err</code>, otherwise …","Body utitilies and types.","","","","","Common client types and functions.","Combines a list of services that implement <code>MakeRoutes</code>.","Common utilities.","Decoding utilities.","Encoding utilities.","Some re-exported crates that might be useful while writing …","","","","","","","","","","Try to create a <code>Request</code> from a unary <code>HttpRequest</code>.","Get an immutable reference to the header map.","Get an immutable reference to the header map.","Get a mutable reference to the header map.","Get a mutable reference to the header map.","Get an immutable reference to the HTTP extensions.","Get an immutable reference to the HTTP extensions.","Get a mutable reference to the HTTP extensions.","Get a mutable reference to the HTTP extensions.","Include generated proto server and client items.","","","","","Macro to workaround <code>async fn</code>s not being allowed in traits. …","The hRPC generated protocol.","The <code>Request</code> type used by hRPC.","The <code>Response</code> type used by hRPC.","Common server types and functions.","","","","","","","","","A request or response body.","Type of the item that a <code>Body</code> produces.","Aggregate this body into a single <code>Buf</code>.","","","Create a new, empty body.","","","","Create a body using a single chunk of data.","","Create a new body by wrapping a stream.","","","","","","","","","Generic client implementation with common methods.","","","","","Connect a socket with the server and return it.","Connect a socket with the server, send a message and …","Error types.","Executes a unary request and returns the decoded response.","","","","Set the function to modify request with before sending a …","Create a new client using the provided transport.","hRPC socket used for streaming RPCs.","","hRPC client transports.","","","","","Errors that can occur within <code>Client</code> operation.","Convenience type for <code>Client</code> operation result.","Occurs if the data server responded with is not supported …","Occurs if an endpoint returns an error.","Occurs if an IO error is returned.","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","Occurs if the data server responded with could not be …","Occures if the underlying transport yields an error.","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>NulError</code> into a <code>io::Error</code>.","Converts an <code>ErrorKind</code> into an <code>Error</code>.","Creates a new instance of an <code>Error</code> from a particular OS …","Returns a mutable reference to the inner error wrapped by …","Returns a reference to the inner error wrapped by this …","","","Consumes the <code>Error</code>, returning its inner error (if any).","","Returns the corresponding <code>ErrorKind</code> for this error.","Returns an error representing the last OS error which …","Creates a new I/O error from a known kind of error as well …","Returns the OS error that this error represents (if any).","","","","","","","","","","","","","","","","","The endpoint for which this error happened.","The hRPC error.","A hRPC socket.","","","","","Close the socket.","","","","Return whether the socket is closed or not.","Receive a message from the socket.","Send a message over the socket.","Spawns a parallel task that processes response messages …","Spawns a parallel task that processes a socket.","","","","","","The error type the transport can produce.","Trait for enabling generic client transport …","Make a request to the server to create a <code>Socket</code>.","Make a unary request to the server.","Client HTTP transport.","Occurs if request creation fails.","Occurs if hyper, the HTTP client, returns an error.","A <code>hyper</code> HTTP client that supports HTTPS.","HTTP transport implemented using <code>hyper</code>.","Errors that <code>Hyper</code> transport might produce.","Occurs if URL scheme isn’t <code>http</code> or <code>https</code>.","Occurs if the given URL is invalid.","Errors that can occur while parsing the URL given to …","Occurs if socket creation fails.","","","","","","","","","","","","","","","","","","","","Creates a new <code>HttpClient</code> that you can use.","","","","Create a new HTTP transport using the provided URI as …","","","","","","","","","","","","","","","","","","","","Extension type used by <code>crate::Request</code> and <code>crate::Response</code>.","Common future types used by <code>hrpc-rs</code>.","Common code to work with sockets.","Common code to work with transports.","A type map of protocol extensions.","","","Clear the <code>Extensions</code> of all inserted extensions.","Check if a type is contained in this <code>Extensions</code>.","","","","Get a reference to a type previously inserted on this …","Get a mutable reference to a type previously inserted on …","Insert a type into this <code>Extensions</code>.","","Check whether the extension set is empty or not.","Get the numer of extensions available.","Create an empty <code>Extensions</code>.","Remove a type from this <code>Extensions</code>.","","","","","Creates a future that is immediately ready with a value.","","","","","","","","","Extract the inner value of this <code>Ready</code>.","","Creates a future that is immediately ready with a value.","","","","","","","Binary message.","Close message.","Ping message.","Pong message.","A hRPC socket.","Generic socket message.","Text message.","","","","","","","","","","","","","","","Common code to work with the HTTP transport.","A boxed HTTP body. This is used to unify response bodies.","Helper methods for working with <code>HeaderMap</code>.","A HTTP request.","Component parts of an HTTP <code>Request</code>","A HTTP response.","Component parts of an HTTP <code>Response</code>","Wrapper over a <code>tokio_tungstenite::WebSocketStream</code> that …","","","","","","","Convert a body with the correct attributes to a <code>BoxBody</code>.","The request’s extensions","The response’s extensions","","","","","","Check if a header contains a string. Ignores casing for …","Check if a header is equal to a bytes array. Ignores …","The request’s headers","The response’s headers","Create a header value for the hRPC content type.","","","","The request’s method","Create a new web socket by wrapping a …","","","","","","The response’s status","","","","","","","","","","","The request’s URI","The request’s version","The response’s version","","","","Errors that can occur while decoding the body of a …","An error occured while reading the body.","The body contained an invalid protobuf message.","","","","","","","","","","","","","","","Encodes a protobuf message into a new <code>BytesMut</code> buffer.","Encodes a protobuf message into the given <code>BytesMut</code> buffer.","Error type that will be returned by servers.","Represents a hRPC error identifier.","An error occured in server.","Specified endpoint was not found on server.","Error produced when trying to parse a string as a …","Endpoint was not implemented by server.","Reached resource quota or rate limited by server.","The server could not be reached, most likely means the …","Return the string version of this hRPC identifier.","","","","","","","","","","","","","","Compare this hRPC identifier with some string identifier …","","","","","","","","","","","","","","","","","","","","","","A (usually english) human message for this error.","The identifier of this error, can be used as an i18n key.","","","","","","","More details about this message. Is dependent on the …","","Create a new hRPC error representing an internal server …","Create a new hRPC error representing a not found error (…","Create a new hRPC error representing a not implemented …","Create a new hRPC error representing resource exhaustion …","","","","","","","","","","","","","","","","","Set the “more details” of this hRPC error.","Set the “identifier” of this hRPC error.","Set the “human message” of this hRPC error.","A request that has a message type of <code>()</code>. Used in places …","Trait used for blanket impls on generated protobuf types.","Request parts.","A hRPC request.","Body of a request.","","","Create a request with an empty body.","Get an immutable reference to the endpoint of this …","Endpoint of a request.","Get a mutable reference to the endpoint of this response.","Get an immutable reference to the extensions of this …","Extensions of a request.","Get a mutable reference to the extensions of this response.","","","","Extract the body from the request and decode it into the …","Convert this to a hRPC request.","Create a new request with the specified message.","Creates a new request using the provided body.","","","","","A response that has a message type of <code>()</code>. Used in places …","Trait used for converting any type to a Response type.","Response parts.","hRPC response type.","Body of a response.","","","Creates a response with an empty body.","Get an immutable reference to the extensions of this …","Extensions of a response.","Get a mutable reference to the extensions of this response.","","","","Extract the body from the response and decode it into the …","Convert this to a hRPC response.","Create a new hRPC response.","Creates a response with the provided body.","","","","","Type that contains a <code>MakeRoutes</code> and implements …","Type that layers the handlers that are produced by a …","The core trait of <code>hrpc-rs</code> servers. This trait acts as a …","Type that contains two <code>MakeRoutes</code>s and stacks (combines) …","","","","","","","","","","","","","","Combines this server with another server.","Error types used by hRPC.","","","","","","","Turns this server into a type that implements <code>MakeService</code>, …","Layers this server with a layer.","Creates a <code>Routes</code>, which will be used to build a …","","","","Prelude that exports commonly used server types.","The router used by hRPC.","Handler type and handlers used by hRPC.","Socket used by hRPC for “streaming” RPCs.","","","","Transports for hRPC services.","","","","","","","","","","Other useful types, traits and functions used by hRPC.","","","","Shorthand type for `Result&lt;T, HrpcError&gt;.","A hRPC socket.","An attribute macro that turns an <code>async fn</code> into a hRPC …","Builder type for inserting <code>HrpcService</code>s before building a …","Finalized <code>Routes</code>, ready for serving as a <code>Service</code>.","Set the service that will be used if no routes are matched.","","","","","Build the routes.","","Combine this with another <code>Routes</code>. Note that this cannot …","","","","","","Layer the routes that were added until this.","Set layer for the finalized router service.","Create a new <code>Routes</code>.","","Add a new route.","","","","","","","","","Layer type that produces <code>HrpcService</code>s.","A hRPC handler.","","","","","","","","","","","","Layer this handler.","","Create a new handler from a <code>tower::Service</code>.","Create a new <code>HrpcLayer</code> from a <code>tower::Layer</code>.","A handler that responses to any request with not found.","","","","","","","","","","","A hRPC socket.","The type of the error returned by a transport if it fails.","Trait for enabling generic transport implementations over …","Server implementation for a HTTP transport.","Start serving a <code>MakeRoutes</code>.","A transport based on <code>hyper</code>.","","","","","Create a new <code>hyper</code> transport.","","","","","Utilities for working with this transport.","","A service that wraps a <code>HrpcService</code>, and takes HTTP …","Layer that can be used to transform a <code>HrpcService</code> to …","Service that wraps an <code>IntoMakeService</code> and transforms the …","Layer that can be used to transform an <code>IntoMakeService</code> …","","","","","","","","","","","","","","","","","","","","","Create a new service by wrapping a <code>HrpcService</code>.","Create a new service by wrapping an <code>IntoMakeService</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,1,2,0,0,0,0,0,0,1,2,3,1,1,2,2,2,4,1,1,2,1,2,1,2,1,2,0,1,2,1,2,0,0,0,0,0,1,2,1,2,1,2,1,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,0,6,6,6,6,6,6,0,6,0,6,6,6,6,0,0,7,7,7,0,7,7,7,8,7,8,8,8,7,7,8,8,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,7,8,7,8,7,8,7,8,7,8,7,8,9,10,11,12,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,0,15,15,0,16,16,0,0,0,17,16,0,16,18,16,17,18,16,17,18,18,18,18,18,16,16,17,17,18,16,16,17,0,18,16,17,18,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,19,20,21,22,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,25,25,25,25,0,0,25,25,25,25,25,25,25,25,25,25,25,26,27,28,29,0,0,0,0,0,0,0,0,30,31,32,30,31,32,0,31,32,31,32,30,31,32,33,33,31,32,0,30,31,32,31,30,30,30,30,30,30,32,30,31,32,30,31,32,30,30,31,32,31,31,32,30,31,32,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,36,0,0,0,0,37,37,0,37,37,37,37,37,38,37,39,38,37,39,38,38,37,38,37,37,37,38,38,38,38,37,37,38,38,37,39,38,38,38,38,38,38,38,37,39,37,37,38,38,38,37,39,38,38,38,38,38,38,38,38,38,37,38,37,38,38,37,39,38,37,39,38,37,39,38,37,39,38,38,38,0,0,0,0,40,40,40,1,1,40,1,1,40,1,40,40,40,1,41,1,1,40,40,40,40,0,0,0,0,42,42,42,2,2,42,2,42,42,42,2,43,2,2,42,42,42,42,0,0,0,0,44,45,46,44,45,46,46,44,45,46,44,45,46,47,0,44,45,46,44,45,46,47,47,47,44,45,46,0,0,0,0,44,45,46,0,44,45,46,44,45,46,44,45,46,0,44,45,46,0,0,0,0,0,48,48,49,48,49,48,49,48,48,48,49,48,49,48,48,48,49,48,48,49,48,49,48,49,48,49,0,0,50,51,50,51,50,51,51,50,51,50,51,50,51,50,51,0,50,51,50,51,50,51,50,51,50,51,0,52,0,0,52,0,53,53,53,53,53,53,53,53,53,0,53,0,0,0,0,54,55,56,57,54,55,56,57,54,56,54,55,56,57,54,55,56,57,55,57,54,56,54,56,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["response",3]]],[[]],[[["parts",3]]],[[["parts",3]]],[[]],[[["error",3]]],[[["error",3]]],[[["httprequest",6]],[["request",3],["result",4,["request"]]]],[[],[["headermap",3],["option",4,["headermap"]]]],[[],[["headermap",3],["option",4,["headermap"]]]],[[],[["option",4,["headermap"]],["headermap",3]]],[[],[["option",4,["headermap"]],["headermap",3]]],[[],[["extensions",3],["option",4,["extensions"]]]],[[],[["extensions",3],["option",4,["extensions"]]]],[[],[["extensions",3],["option",4,["extensions"]]]],[[],[["extensions",3],["option",4,["extensions"]]]],null,[[]],[[]],[[],["request",3]],[[],["response",3]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[["body",3]]],[[]],[[]],[[]],[[["context",3],["pin",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[["context",3],["pin",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3]],[["result",4,["option"]],["poll",4,["result"]]]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[["request",3]]],[[["request",3]]],null,[[["request",3],["message",8]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["fn",8],["arc",3,["fn"]]]],[[]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[],["str",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["ioerror",3]]],[[["decodebodyerror",4]]],[[["elapsed",3]],["error",3]],[[]],[[["error",3]],["error",3]],[[["error",3]],["error",3]],[[["error",3]],["error",3]],[[["decodeerror",3]],["error",3]],[[["encodeerror",3]],["error",3]],[[["joinerror",3]],["error",3]],[[["intoinnererror",3]],["error",3]],[[["nulerror",3]],["error",3]],[[["errorkind",4]],["error",3]],[[["i32",15]],["error",3]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],[["box",3,["error","global"]],["option",4,["box"]]]],[[],[["option",4,["error"]],["error",3]]],[[],["errorkind",4]],[[],["error",3]],[[["errorkind",4]],["error",3]],[[],[["i32",15],["option",4,["i32"]]]],[[],[["stderror",8],["option",4,["stderror"]]]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],[["joinhandle",3,["result"]],["result",4,["hrpcerror"]]]],[[],[["joinhandle",3,["result"]],["result",4,["hrpcerror"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[["request",3]],[["clientresult",6,["socket"]],["boxfuture",6,["clientresult"]]]],[[["request",3]],[["clientresult",6,["response"]],["boxfuture",6,["clientresult"]]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["request",3]],[["clientresult",6,["socket"]],["boxfuture",6,["clientresult"]]]],[[["request",3]],[["clientresult",6,["response"]],["boxfuture",6,["clientresult"]]]],[[],["hyper",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[]],[[]],[[],["httpclient",6]],[[]],[[]],[[]],[[["uri",3]],[["result",4,["hypererror"]],["hypererror",4]]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["extensions",3]],[[["formatter",3]],["result",6]],[[]],[[],["option",4]],[[],["option",4]],[[["send",8],["sync",8]],[["option",4],["send",8],["sync",8]]],[[]],[[],["bool",15]],[[],["usize",15]],[[],["extensions",3]],[[],[["option",4],["send",8],["sync",8]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["ready",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["option",4]],[[["pin",3],["context",3]],["poll",4]],[[],["ready",3]],[[]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[["wsmessage",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["boxbody",6]],null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[["headername",3],["str",15]],["bool",15]],[[["headername",3]],["bool",15]],null,null,[[],["headervalue",3]],[[]],[[]],[[]],null,[[["websocketstream",3]]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4]]],[[["context",3],["pin",3]],[["poll",4,["option"]],["option",4]]],[[["context",3],["pin",3]],[["poll",4,["result"]],["result",4]]],[[["socketmessage",4],["pin",3]],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["stderror",8],["option",4,["stderror"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["bytesmut",3]],[[["bytesmut",3]]],null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["error",3]],[[],["hrpcerroridentifier",4]],[[]],[[]],[[["hrpcerroridentifier",4]],["ordering",4]],[[],["bool",15]],[[]],[[]],[[],["usize",15]],[[["error",3]],["bool",15]],[[["hrpcerroridentifier",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]]],[[]],[[]],[[["boxerror",6]]],[[["wserror",4]]],[[["decodebodyerror",4]]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[]],null,null,[[]],[[]],[[]],[[],["request",3]],[[],["response",3]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["result",4,["decodeerror"]],["decodeerror",3]]],null,[[["error",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["hrpcerroridentifier",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[],["request",3]],[[],["str",15]],null,[[],["cow",4]],[[],["extensions",3]],null,[[],["extensions",3]],[[["request",3]]],[[]],[[]],[[]],[[],["request",3]],[[]],[[["body",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[],["extensions",3]],null,[[],["extensions",3]],[[]],[[["response",3]]],[[]],[[]],[[],["response",3]],[[],["response",3]],[[["body",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["servicestack",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["intomakeservice",3]],[[],["layeredservice",3]],[[],["routes",3]],[[],["routes",3]],[[],["routes",3]],[[["context",3]],[["result",4],["poll",4,["result"]]]],null,null,null,null,[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["routesfinalized",3]],[[["boxrequest",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["boxrequest",6]]],[[],["hrpclayer",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hrpcservice",3]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[],[["boxfuture",6,["result"]],["result",4]]],null,[[]],[[]],[[]],[[]],[[]],[[],[["boxfuture",6,["result"]],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["httprequest",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hrpcservice",3]]],[[["intomakeservice",3]]],[[["hrpcservice",3]]],[[["intomakeservice",3]]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[["context",3]],[["result",4],["poll",4,["result"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[3,"Request"],[3,"Response"],[6,"HttpResponse"],[6,"BoxResponse"],[3,"Body"],[3,"Client"],[4,"ClientError"],[3,"IoError"],[13,"MessageDecode"],[13,"ContentNotSupported"],[13,"Io"],[13,"Transport"],[13,"EndpointError"],[3,"Socket"],[8,"Transport"],[4,"HyperError"],[4,"InvalidUrlKind"],[3,"Hyper"],[13,"FailedRequestBuilder"],[13,"Http"],[13,"InvalidUrl"],[13,"SocketInitError"],[3,"Extensions"],[3,"Ready"],[4,"SocketMessage"],[13,"Binary"],[13,"Text"],[13,"Ping"],[13,"Pong"],[3,"WebSocket"],[3,"HttpRequestParts"],[3,"HttpResponseParts"],[8,"HeaderMapExt"],[4,"DecodeBodyError"],[13,"InvalidProtoMessage"],[13,"InvalidBody"],[4,"HrpcErrorIdentifier"],[3,"Error"],[3,"NotHrpcErrorIdentifier"],[3,"Parts"],[8,"IntoRequest"],[3,"Parts"],[8,"IntoResponse"],[3,"LayeredService"],[3,"ServiceStack"],[3,"IntoMakeService"],[8,"MakeRoutes"],[3,"Routes"],[3,"RoutesFinalized"],[3,"HrpcService"],[3,"HrpcLayer"],[8,"Transport"],[3,"Hyper"],[3,"HrpcServiceToHttp"],[3,"HrpcServiceToHttpLayer"],[3,"MakeRoutesToHttp"],[3,"MakeRoutesToHttpLayer"]]},\
"hrpc_build":{"doc":"Code generation for <code>hrpc</code>.","t":[3,16,16,8,16,8,11,11,11,11,0,10,11,11,10,10,11,5,11,5,11,11,5,11,11,11,10,10,11,10,10,10,10,11,10,11,10,0,10,11,11,11,11,11,11,5,5],"n":["Builder","Comment","Comment","Method","Method","Service","borrow","borrow_mut","build_client","build_server","client","client_streaming","clone","clone_into","comment","comment","compile","compile_protos","compile_with_config","configure","extern_path","field_attribute","fmt","fmt","format","from","identifier","identifier","into","methods","name","name","options","out_dir","package","proto_path","request_response_name","server","server_streaming","to_owned","try_from","try_into","type_attribute","type_id","vzip","generate","generate"],"q":["hrpc_build","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc_build::client","hrpc_build::server"],"d":["Service generator builder.","Comment type.","Comment type.","Method generation trait.","Method type.","Service generation trait.","","","Enable or disable hRPC client code generation.","Enable or disable hRPC server code generation.","Service code generation for client","Method is streamed by client.","","","Get comments about this item.","Get comments about this item.","Compile the .proto files and execute code generation.","Simple <code>.proto</code> compiling. Use <code>configure</code> instead if you need …","Compile the .proto files and execute code generation using …","Configure <code>hrpc-build</code> code generation.","Declare externally provided Protobuf package or type.","Add additional attribute to matched messages, enums, and …","Format files under the out_dir with rustfmt","","Enable the output to be formated by rustfmt.","","Identifier used to generate type name.","Identifier used to generate type name.","","Methods provided by service.","Name of service.","Name of method.","Get options of this item.","Set the output directory to generate code to.","Package name of service.","Set the path to where tonic will search for the …","Type name of request and response.","Service code generation for server","Method is streamed by server.","","","","Add additional attribute to matched messages, enums, and …","","","Generate service for client.","Generate service for Server."],"i":[0,1,2,0,1,0,3,3,3,3,0,2,3,3,1,2,3,0,3,0,3,3,0,3,3,3,1,2,3,1,1,2,2,3,1,3,2,0,2,3,3,3,3,3,3,0,0],"f":[null,null,null,null,null,null,[[]],[[]],[[["bool",15]]],[[["bool",15]]],null,[[],["bool",15]],[[],["builder",3]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[["config",3]],["result",6]],[[],["builder",3]],[[]],[[["asref",8,["str"]],["str",15]]],[[["str",15]]],[[["formatter",3]],["result",6]],[[["bool",15]]],[[]],[[],["str",15]],[[],["str",15]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],["vec",3]],[[]],[[],["str",15]],[[]],[[["str",15]]],null,[[],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[["asref",8,["str"]],["str",15]]],[[],["typeid",3]],[[]],[[["str",15]],["tokenstream",3]],[[["str",15]],["tokenstream",3]]],"p":[[8,"Service"],[8,"Method"],[3,"Builder"]]},\
"hrpc_proc_macro":{"doc":"Utility proc macros for <code>hrpc</code>.","t":[23],"n":["handler"],"q":["hrpc_proc_macro"],"d":["An attribute macro that turns an <code>async fn</code> into a hRPC …"],"i":[0],"f":[null],"p":[]},\
"interop":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,0,11,11,11,0,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,12,11,11,11,11,11],"n":["MuService","Ping","Pong","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","client","clone","clone","clone_into","clone_into","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_response","into_response","main","merge_field","merge_field","mu","mu","mu","mu_client","mu_middleware","mu_mu","mu_mute","mu_server","ne","ne","server","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MuClient","borrow","borrow_mut","clone","clone_into","fmt","from","inner","into","mu","mu_mu","mu_mute","new","new_inner","new_transport","to_owned","try_from","try_into","type_id","vzip","Mu","MuServer","borrow","borrow_mut","clone","clone_into","from","into","make_routes","mu","mu_middleware","mu_mu","mu_mu_middleware","mu_mute","mu_mute_middleware","new","serve","service","to_owned","try_from","try_into","type_id","vzip"],"q":["interop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interop::mu_client","","","","","","","","","","","","","","","","","","","","interop::mu_server","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Ping message.","Pong message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","Mu RPC.","MuMu RPC. ``` test ```","MuMute RPC.","Create a new client using HTTP transport.","Create a new client using the provided generic client.","Create a new client using the provided transport.","","","","","","Generated trait containing hRPC methods that should be …","","","","","","","","","Mu RPC.","Optional middleware for this RPC.","MuMu RPC. ``` test ```","Optional middleware for this RPC.","MuMute RPC.","Optional middleware for this RPC.","Create a new service server.","Serves the service with HTTP transport.","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,2,3,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,1,2,3,1,2,3,2,3,2,3,0,2,3,1,2,3,0,1,1,1,0,2,3,0,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,5,5,5,5,5,5,5,6,6,6,6,6,6,5,5,5,5,5,5,5,5],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ping",3]],[[],["pong",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["ping",3]],["bool",15]],[[["pong",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["response",3]],[[],["response",3]],[[]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["result",4,["decodeerror"]],["decodeerror",3]]],[[["request",3,["ping"]],["ping",3]],[["boxfuture",6,["serverresult"]],["serverresult",6,["response"]]]],null,null,null,[[["str",15]],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[["request",3],["pong",3],["socket",3,["pong","ping"]],["ping",3]],[["serverresult",6],["boxfuture",6,["serverresult"]]]],[[["request",3],["pong",3],["socket",3,["pong","ping"]],["ping",3]],[["serverresult",6],["boxfuture",6,["serverresult"]]]],null,[[["ping",3]],["bool",15]],[[["pong",3]],["bool",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[],["muclient",3]],[[]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[]],[[]],[[]],[[],["clientresult",6]],[[["client",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["routes",3]],[[["hrpcrequest",3,["ping"]],["ping",3]],[["serverresult",6,["hrpcresponse"]],["boxfuture",6,["serverresult"]]]],[[["str",15]],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[["hrpcrequest",3],["socket",3,["pong","ping"]],["pong",3],["ping",3]],[["boxfuture",6,["serverresult"]],["serverresult",6]]],[[["str",15]],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[["hrpcrequest",3],["socket",3,["pong","ping"]],["pong",3],["ping",3]],[["boxfuture",6,["serverresult"]],["serverresult",6]]],[[["str",15]],[["option",4,["hrpclayer"]],["hrpclayer",3]]],[[]],[[["tosocketaddrs",8]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"MuService"],[3,"Ping"],[3,"Pong"],[3,"MuClient"],[3,"MuServer"],[8,"Mu"]]},\
"server":{"doc":"","t":[3,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["GreeterService","borrow","borrow_mut","clone","clone_into","from","into","into_response","main","to_owned","try_from","try_into","type_id","vzip","welcome_user"],"q":["server","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["greeterservice",3]],[[]],[[]],[[]],[[],["response",3]],[[],[["result",4,["boxerror"]],["boxerror",6]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["welcomeuserrequest",3],["request",3,["welcomeuserrequest"]]],[["serverresult",6,["response"]],["boxfuture",6,["serverresult"]]]]],"p":[[3,"GreeterService"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};