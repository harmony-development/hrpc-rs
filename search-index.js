var searchIndex = JSON.parse('{\
"hrpc":{"doc":"Common code used in hRPC code generation.","t":[0,0,3,11,11,11,11,3,11,6,4,13,13,12,12,12,13,13,13,13,4,13,3,11,11,11,11,0,0,0,3,11,3,11,5,3,3,11,11,8,10,10,11,11,11,4,13,13,13,5,23,3,11,11,11,11,11,11,11,11,8,10,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18],"n":["client","socket","Socket","send_message","get_message","close","read_only","ReadSocket","get_message","ClientResult","ClientError","Reqwest","EndpointError","raw_error","status","endpoint","SocketError","MessageDecode","NonProtobuf","InvalidUrl","InvalidUrlKind","InvalidScheme","Client","new","execute_request","connect_socket","connect_socket_req","server","filters","rate","Rate","new","State","new","rate_limit","StatusCode","Socket","receive_message","send_message","CustomError","code","message","decode_error","not_found_error","internal_server_error","SocketError","ClosedNormally","MessageDecode","Other","json_err_bytes","async_trait","Request","new","empty","header","message","get_message","get_header","into_parts","from_parts","IntoRequest","into_request","return_closed","return_print","serve_multiple","serve_multiple_tls","include_proto","into_request","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_request","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_request","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_request","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_request","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_request","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_request","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_request","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","get_hash","into_request","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_request","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_request","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","hash","cmp","fmt","try_from","try_from","try_from","fmt","from","eq","ne","eq","from_str","default","clone","partial_cmp","into_response","into_request","from","from","from","clone","clone","clone","clone","clone","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","source","source","from_u16","from_bytes","as_u16","as_str","canonical_reason","is_informational","is_success","is_redirection","is_client_error","is_server_error","CONTINUE","SWITCHING_PROTOCOLS","PROCESSING","OK","CREATED","ACCEPTED","NON_AUTHORITATIVE_INFORMATION","NO_CONTENT","RESET_CONTENT","PARTIAL_CONTENT","MULTI_STATUS","ALREADY_REPORTED","IM_USED","MULTIPLE_CHOICES","MOVED_PERMANENTLY","FOUND","SEE_OTHER","NOT_MODIFIED","USE_PROXY","TEMPORARY_REDIRECT","PERMANENT_REDIRECT","BAD_REQUEST","UNAUTHORIZED","PAYMENT_REQUIRED","FORBIDDEN","NOT_FOUND","METHOD_NOT_ALLOWED","NOT_ACCEPTABLE","PROXY_AUTHENTICATION_REQUIRED","REQUEST_TIMEOUT","CONFLICT","GONE","LENGTH_REQUIRED","PRECONDITION_FAILED","PAYLOAD_TOO_LARGE","URI_TOO_LONG","UNSUPPORTED_MEDIA_TYPE","RANGE_NOT_SATISFIABLE","EXPECTATION_FAILED","IM_A_TEAPOT","MISDIRECTED_REQUEST","UNPROCESSABLE_ENTITY","LOCKED","FAILED_DEPENDENCY","UPGRADE_REQUIRED","PRECONDITION_REQUIRED","TOO_MANY_REQUESTS","REQUEST_HEADER_FIELDS_TOO_LARGE","UNAVAILABLE_FOR_LEGAL_REASONS","INTERNAL_SERVER_ERROR","NOT_IMPLEMENTED","BAD_GATEWAY","SERVICE_UNAVAILABLE","GATEWAY_TIMEOUT","HTTP_VERSION_NOT_SUPPORTED","VARIANT_ALSO_NEGOTIATES","INSUFFICIENT_STORAGE","LOOP_DETECTED","NOT_EXTENDED","NETWORK_AUTHENTICATION_REQUIRED"],"q":["hrpc","hrpc::client","hrpc::client::socket","","","","","","","hrpc::client","","","","hrpc::client::ClientError","","","hrpc::client","","","","","","","","","","","hrpc","hrpc::server","hrpc::server::filters","hrpc::server::filters::rate","","","","","hrpc::server","","","","","","","","","","","","","","","hrpc","","","","","","","","","","","","","","","","","hrpc::client::socket","","","","","","","","","","","","","","","","","","","","","","hrpc::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc::server::filters::rate","","","","","","","","","","","","","","","","","","","","","","hrpc::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hrpc","","","","","","","","","hrpc::server","","","","","","","","","","","","","","","","hrpc","hrpc::client","","","","hrpc::client::socket","","hrpc::server::filters::rate","","hrpc::client","hrpc::client::socket","","hrpc::client","","hrpc::server::filters::rate","","hrpc::server","","hrpc::client","","hrpc::server","hrpc::client","hrpc::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Common client types and functions.","Socket implementations.","A websocket, wrapped for ease of use with protobuf …","Send a protobuf message over the websocket.","Get a message from the websocket.","Close this websocket. All subsequent message sending …","Converts this socket to a read-only socket.","A read-only version of [<code>Socket</code>].","Get a message from the websocket.","Convenience type for <code>Client</code> operation result.","Errors that can occur within <code>Client</code> operation.","Occurs if reqwest, the HTTP client, returns an error.","Occurs if an endpoint returns an error.","","","","Occurs if a websocket returns an error.","Occurs if the data server responded with can’t be …","Occurs if the data server responded with isn’t a …","Occurs if the given URL is invalid.","Errors that can occur while parsing the URL given to …","Occurs if URL scheme isn’t <code>http</code> or <code>https</code>.","Generic client implementation with common methods.","Creates a new client.","Executes an unary request returns the decoded response.","Connect a socket with the server and return it.","Connect a socket with the server, send a message and …","Common server types and functions.","Useful filters.","","A rate of requests per time period.","Create a new rate.","","","Creates a filter that will return an <code>Err(error)</code> with <code>error</code>…","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).","","Receive a message from the socket.","Send a message over the socket.","Trait that needs to be implemented to use an error type …","Status code that will be used in client response.","Message that will be used in client response.","Return a message decode error.","Return a not fonud error.","Return an internal server error.","","The socket is closed normally. This is NOT an error.","Error occured while decoding protobuf data.","Some error occured in socket.","Creates a JSON error response from a message.","","A hRPC request.","Create a new request with the specified message.","Create an empty request.","Change / add a header.","Change the contained message.","Get a reference to the inner message.","Get a header.","Destructure this request into parts.","Create a request from parts.","Trait used for blanket impls on generated protobuf types.","Convert this to a request.","Return if the socket is closed normally, otherwise return …","Return if the socket is closed normally, otherwise print …","Serves multiple services’ filters on the same address.","Serves multiple services’ filters on the same address. …","Include generated proto server and client items.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a u16 to a status code.","Converts a &[u8] to a status code","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.","Returns a &str representation of the <code>StatusCode</code>","Get the standardised <code>reason-phrase</code> for this status code.","Check if status is within 100-199.","Check if status is within 200-299.","Check if status is within 300-399.","Check if status is within 400-499.","Check if status is within 500-599.","100 Continue [RFC7231, Section 6.2.1]","101 Switching Protocols [RFC7231, Section 6.2.2]","102 Processing [RFC2518]","200 OK [RFC7231, Section 6.3.1]","201 Created [RFC7231, Section 6.3.2]","202 Accepted [RFC7231, Section 6.3.3]","203 Non-Authoritative Information [RFC7231, Section 6.3.4]","204 No Content [RFC7231, Section 6.3.5]","205 Reset Content [RFC7231, Section 6.3.6]","206 Partial Content [RFC7233, Section 4.1]","207 Multi-Status [RFC4918]","208 Already Reported [RFC5842]","226 IM Used [RFC3229]","300 Multiple Choices [RFC7231, Section 6.4.1]","301 Moved Permanently [RFC7231, Section 6.4.2]","302 Found [RFC7231, Section 6.4.3]","303 See Other [RFC7231, Section 6.4.4]","304 Not Modified [RFC7232, Section 4.1]","305 Use Proxy [RFC7231, Section 6.4.5]","307 Temporary Redirect [RFC7231, Section 6.4.7]","308 Permanent Redirect [RFC7238]","400 Bad Request [RFC7231, Section 6.5.1]","401 Unauthorized [RFC7235, Section 3.1]","402 Payment Required [RFC7231, Section 6.5.2]","403 Forbidden [RFC7231, Section 6.5.3]","404 Not Found [RFC7231, Section 6.5.4]","405 Method Not Allowed [RFC7231, Section 6.5.5]","406 Not Acceptable [RFC7231, Section 6.5.6]","407 Proxy Authentication Required [RFC7235, Section 3.2]","408 Request Timeout [RFC7231, Section 6.5.7]","409 Conflict [RFC7231, Section 6.5.8]","410 Gone [RFC7231, Section 6.5.9]","411 Length Required [RFC7231, Section 6.5.10]","412 Precondition Failed [RFC7232, Section 4.2]","413 Payload Too Large [RFC7231, Section 6.5.11]","414 URI Too Long [RFC7231, Section 6.5.12]","415 Unsupported Media Type [RFC7231, Section 6.5.13]","416 Range Not Satisfiable [RFC7233, Section 4.4]","417 Expectation Failed [RFC7231, Section 6.5.14]","418 I’m a teapot [curiously not registered by IANA but …","421 Misdirected Request RFC7540, Section 9.1.2","422 Unprocessable Entity [RFC4918]","423 Locked [RFC4918]","424 Failed Dependency [RFC4918]","426 Upgrade Required [RFC7231, Section 6.5.15]","428 Precondition Required [RFC6585]","429 Too Many Requests [RFC6585]","431 Request Header Fields Too Large [RFC6585]","451 Unavailable For Legal Reasons [RFC7725]","500 Internal Server Error [RFC7231, Section 6.6.1]","501 Not Implemented [RFC7231, Section 6.6.2]","502 Bad Gateway [RFC7231, Section 6.6.3]","503 Service Unavailable [RFC7231, Section 6.6.4]","504 Gateway Timeout [RFC7231, Section 6.6.5]","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]","506 Variant Also Negotiates [RFC2295]","507 Insufficient Storage [RFC4918]","508 Loop Detected [RFC5842]","510 Not Extended [RFC2774]","511 Network Authentication Required [RFC6585]"],"i":[0,0,0,1,1,1,1,0,2,0,0,3,3,4,4,4,3,3,3,3,0,5,0,6,6,6,6,0,0,0,0,7,0,8,0,0,0,9,9,0,10,10,10,10,10,0,11,11,11,0,0,0,12,12,12,12,12,12,12,12,0,13,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,14,14,14,14,14,14,14,14,14,14,14,14,14,14,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,12,3,3,3,6,1,2,7,8,6,1,2,3,5,7,8,9,11,3,5,11,3,11,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14],"f":[null,null,null,[[]],[[]],[[]],[[],["readsocket",3]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["client",3],["url",3]],["clientresult",6]],[[["message",8],["request",3],["str",15]]],[[["request",3],["str",15]]],[[["request",3],["str",15]]],null,null,null,null,[[["duration",3],["u64",15]]],null,[[["rate",3]]],[[["rate",3]],["boxedfilter",3]],null,null,[[]],[[]],null,[[],["statuscode",3]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[]],null,null,null,null,[[["str",15]],[["vec",3],["u8",15]]],null,null,[[]],[[],["request",3]],[[["headervalue",3],["headername",3]]],[[],["request",3]],[[]],[[["headername",3]],[["option",4],["headervalue",3]]],[[]],[[]],null,[[],["request",3]],null,null,null,null,null,[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["request",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["request",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[],["u64",15]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["request",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["statuscode",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["u16",15]],[["statuscode",3],["result",4]]],[[["str",15]],[["result",4],["statuscode",3]]],[[],[["result",4],["statuscode",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["statuscode",3]],["statuscode",3]],[[["statuscode",3]],["bool",15]],[[["statuscode",3]],["bool",15]],[[["u16",15]],["bool",15]],[[["str",15]],[["result",4],["statuscode",3],["invalidstatuscode",3]]],[[],["statuscode",3]],[[],["statuscode",3]],[[["statuscode",3]],[["ordering",4],["option",4]]],[[],[["response",3],["body",3]]],[[],["request",3]],[[["error",3]]],[[["decodeerror",3]]],[[["error",4]]],[[],["client",3]],[[]],[[],["readsocket",3]],[[],["rate",3]],[[],["state",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["stderror",8],["option",4]]],[[],[["stderror",8],["option",4]]],[[["u16",15]],[["result",4],["statuscode",3],["invalidstatuscode",3]]],[[],[["result",4],["statuscode",3],["invalidstatuscode",3]]],[[],["u16",15]],[[],["str",15]],[[],[["option",4],["str",15]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"Socket"],[3,"ReadSocket"],[4,"ClientError"],[13,"EndpointError"],[4,"InvalidUrlKind"],[3,"Client"],[3,"Rate"],[3,"State"],[3,"Socket"],[8,"CustomError"],[4,"SocketError"],[3,"Request"],[8,"IntoRequest"],[3,"StatusCode"]]},\
"hrpc_build":{"doc":"","t":[0,5,0,5,5,5,3,8,18,16,16,10,10,10,10,10,8,18,16,10,10,10,10,10,10,10,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["client","generate","server","generate","compile_protos","configure","Builder","Service","CODEC_PATH","Comment","Method","name","package","identifier","methods","comment","Method","CODEC_PATH","Comment","name","identifier","client_streaming","server_streaming","comment","options","request_response_name","fmt","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","clone","fmt","build_client","build_server","format","out_dir","extern_path","field_attribute","type_attribute","proto_path","compile","compile_with_config"],"q":["hrpc_build","hrpc_build::client","hrpc_build","hrpc_build::server","hrpc_build","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Service code generation for client","Generate service for client.","Service code generation for server","Generate service for Server.","Simple <code>.proto</code> compiling. Use [<code>configure</code>] instead if you …","Configure <code>tonic-build</code> code generation.","Service generator builder.","Service generation trait.","Path to the codec.","Comment type.","Method type.","Name of service.","Package name of service.","Identifier used to generate type name.","Methods provided by service.","Get comments about this item.","Method generation trait.","Path to the codec.","Comment type.","Name of method.","Identifier used to generate type name.","Method is streamed by client.","Method is streamed by server.","Get comments about this item.","Get options of this item.","Type name of request and response.","Format files under the out_dir with rustfmt","","","","","","","","","","","","","Enable or disable hRPC client code generation.","Enable or disable hRPC server code generation.","Enable the output to be formated by rustfmt.","Set the output directory to generate code to.","Declare externally provided Protobuf package or type.","Add additional attribute to matched messages, enums, and …","Add additional attribute to matched messages, enums, and …","Set the path to where tonic will search for the …","Compile the .proto files and execute code generation.","Compile the .proto files and execute code generation …"],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,[[["str",15]],["tokenstream",3]],null,[[["str",15]],["tokenstream",3]],[[],["result",6]],[[],["builder",3]],null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[]],null,null,null,[[],["str",15]],[[],["str",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["vec",3]],[[["str",15]]],[[["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["builder",3]],[[["formatter",3]],["result",6]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[["asref",8],["str",15]]],[[["asref",8],["str",15]]],[[]],[[],["result",6]],[[["config",3]],["result",6]]],"p":[[8,"Service"],[8,"Method"],[3,"Builder"]]},\
"interop":{"doc":"","t":[0,3,12,11,11,11,0,8,18,18,16,11,10,11,11,10,3,12,11,11,11,11,3,12,3,12,5,5,5,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["mu_client","MuClient","inner","new","mu","mu_mute","mu_server","Mu","SOCKET_PING_PERIOD","SOCKET_PING_DATA","Error","mu_pre","mu","mu_mute_pre","mu_mute_on_upgrade","mu_mute","MuServer","inner","new","serve","filters","filters_uncombined","Ping","mu","Pong","mu","main","client","server","Server","ServerError","PingEmpty","TooFast","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_request","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_request","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_request","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_request","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_request","vzip","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","into_request","vzip","mu_pre","mu","mu_mute_on_upgrade","mu_mute","clone","clone","clone","clone","default","default","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","code","message","encode_raw","merge_field","encoded_len","clear","encode_raw","merge_field","encoded_len","clear"],"q":["interop","interop::mu_client","","","","","interop","interop::mu_server","","","","","","","","","","","","","","","interop","","","","","","","","","","","interop::mu_client","","","","","","","","","","","interop::mu_server","","","","","","","","","","","interop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","interop::mu_client","interop::mu_server","interop","","","","","","","","interop::mu_client","interop::mu_server","interop","","","","","","","","","","","",""],"d":["Generated client implementations.","","","","","","Generated server implementations.","Generated trait containing hRPC methods that should be …","","","","","","","","","","","Create a new service server.","Start serving.","Convert this service to <code>warp</code> <code>Filter</code>s.","Extract <code>warp</code> filters, mapped to their URL API path.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,0,0,2,2,2,2,2,2,2,2,0,3,3,3,3,3,0,4,0,5,0,0,0,0,0,6,6,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,7,7,7,7,4,5,1,3,4,5,4,4,5,5,4,5,1,3,7,6,6,6,6,4,4,4,4,5,5,5,5],"f":[null,null,null,[[["reqwestclient",3],["url",3]],["clientresult",6]],[[]],[[]],null,null,null,null,null,[[],["boxedfilter",3]],[[["request",3],["ping",3]],[["pin",3],["box",3]]],[[],["boxedfilter",3]],[[["response",6]],["response",6]],[[["socket",3],["pong",3],["request",3],["ping",3]],[["pin",3],["box",3]]],null,null,[[]],[[["socketaddr",4],["into",8]]],[[],["boxedfilter",3]],[[],[["hashmap",3],["str",15],["boxedfilter",3]]],null,null,null,null,[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["request",3]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["request",3]],[[]],[[],["boxedfilter",3]],[[["request",3],["ping",3]],[["box",3],["pin",3]]],[[["response",6]],["response",6]],[[["socket",3],["ping",3],["pong",3],["request",3]],[["pin",3],["box",3]]],[[],["ping",3]],[[],["pong",3]],[[],["muclient",3]],[[],["muserver",3]],[[]],[[]],[[["ping",3]],["bool",15]],[[["ping",3]],["bool",15]],[[["pong",3]],["bool",15]],[[["pong",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["statuscode",3]],[[],[["vec",3],["u8",15]]],[[]],[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]],[[],["usize",15]],[[]],[[]],[[["u32",15],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]],[[],["usize",15]],[[]]],"p":[[3,"MuClient"],[8,"Mu"],[3,"MuServer"],[3,"Ping"],[3,"Pong"],[4,"ServerError"],[3,"Server"]]}\
}');
initSearch(searchIndex);